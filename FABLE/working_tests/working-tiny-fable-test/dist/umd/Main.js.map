{"version":3,"file":null,"sources":["../../node_modules/fable-core/Symbol.js","../../node_modules/fable-core/Util.js","../../node_modules/fable-core/ListClass.js","../../node_modules/fable-core/Seq.js","../../node_modules/fable-core/GenericComparer.js","../../node_modules/fable-core/Map.js","../../node_modules/fable-core/List.js","../../node_modules/fable-core/Set.js","../../src/fs/Common.fs","../../node_modules/fable-core/RegExp.js","../../node_modules/fable-core/Long.js","../../node_modules/fable-core/TimeSpan.js","../../node_modules/fable-core/Date.js","../../node_modules/fable-core/String.js","../../src/fs/Tokeniser.fs","../../src/fs/Parser.fs","../../src/fs/Reducer.fs","../../src/fs/Main.fs"],"sourcesContent":["var fableGlobal = function () {\n    var globalObj = typeof window !== \"undefined\" ? window\n        : (typeof global !== \"undefined\" ? global\n            : (typeof self !== \"undefined\" ? self : null));\n    if (typeof globalObj.__FABLE_CORE__ === \"undefined\") {\n        globalObj.__FABLE_CORE__ = {\n            types: new Map(),\n            symbols: {\n                reflection: Symbol(\"reflection\"),\n            }\n        };\n    }\n    return globalObj.__FABLE_CORE__;\n}();\nexport function setType(fullName, cons) {\n    fableGlobal.types.set(fullName, cons);\n}\nexport function getType(fullName) {\n    return fableGlobal.types.get(fullName);\n}\nexport default (fableGlobal.symbols);\n","import FSymbol from \"./Symbol\";\nvar NonDeclaredType = (function () {\n    function NonDeclaredType(kind, definition, generics) {\n        this.kind = kind;\n        this.definition = definition;\n        this.generics = generics;\n    }\n    NonDeclaredType.prototype.Equals = function (other) {\n        if (this.kind === other.kind && this.definition === other.definition) {\n            return typeof this.generics === \"object\"\n                ? equalsRecords(this.generics, other.generics)\n                : this.generics === other.generics;\n        }\n        return false;\n    };\n    return NonDeclaredType;\n}());\nexport { NonDeclaredType };\nexport var Any = new NonDeclaredType(\"Any\");\nexport var Unit = new NonDeclaredType(\"Unit\");\nexport function Option(t) {\n    return new NonDeclaredType(\"Option\", \"Option\", t);\n}\nfunction FArray(t) {\n    return new NonDeclaredType(\"Array\", \"Array\", t);\n}\nexport { FArray as Array };\nexport function Tuple(ts) {\n    return new NonDeclaredType(\"Tuple\", \"Tuple\", ts);\n}\nexport function GenericParam(definition) {\n    return new NonDeclaredType(\"GenericParam\", definition);\n}\nexport function Interface(definition) {\n    return new NonDeclaredType(\"Interface\", definition);\n}\nexport function makeGeneric(typeDef, genArgs) {\n    return new NonDeclaredType(\"GenericType\", typeDef, genArgs);\n}\nexport function isGeneric(typ) {\n    return typ instanceof NonDeclaredType && typ.generics != null;\n}\n/**\n * Returns the parent if this is a declared generic type or the argument otherwise.\n * Attention: Unlike .NET this doesn't throw an exception if type is not generic.\n*/\nexport function getDefinition(typ) {\n    return isGeneric(typ) ? typ.definition : typ;\n}\nexport function extendInfo(cons, info) {\n    var parent = Object.getPrototypeOf(cons.prototype);\n    if (typeof parent[FSymbol.reflection] === \"function\") {\n        var newInfo_1 = {}, parentInfo_1 = parent[FSymbol.reflection]();\n        Object.getOwnPropertyNames(info).forEach(function (k) {\n            var i = info[k];\n            if (typeof i === \"object\") {\n                newInfo_1[k] = Array.isArray(i)\n                    ? (parentInfo_1[k] || []).concat(i)\n                    : Object.assign(parentInfo_1[k] || {}, i);\n            }\n            else {\n                newInfo_1[k] = i;\n            }\n        });\n        return newInfo_1;\n    }\n    return info;\n}\nexport function hasInterface(obj, interfaceName) {\n    if (typeof obj[FSymbol.reflection] === \"function\") {\n        var interfaces = obj[FSymbol.reflection]().interfaces;\n        return Array.isArray(interfaces) && interfaces.indexOf(interfaceName) > -1;\n    }\n    return false;\n}\nexport function isArray(obj) {\n    return Array.isArray(obj) || ArrayBuffer.isView(obj);\n}\nexport function getRestParams(args, idx) {\n    for (var _len = args.length, restArgs = Array(_len > idx ? _len - idx : 0), _key = idx; _key < _len; _key++)\n        restArgs[_key - idx] = args[_key];\n    return restArgs;\n}\nexport function toString(o) {\n    return o != null && typeof o.ToString == \"function\" ? o.ToString() : String(o);\n}\nexport function hash(x) {\n    var s = JSON.stringify(x);\n    var h = 5381, i = 0, len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function equals(x, y) {\n    // Optimization if they are referencially equal\n    if (x === y)\n        return true;\n    else if (x == null)\n        return y == null;\n    else if (y == null)\n        return false;\n    else if (Object.getPrototypeOf(x) !== Object.getPrototypeOf(y))\n        return false;\n    else if (typeof x.Equals === \"function\")\n        return x.Equals(y);\n    else if (Array.isArray(x)) {\n        if (x.length != y.length)\n            return false;\n        for (var i = 0; i < x.length; i++)\n            if (!equals(x[i], y[i]))\n                return false;\n        return true;\n    }\n    else if (ArrayBuffer.isView(x)) {\n        if (x.byteLength !== y.byteLength)\n            return false;\n        var dv1 = new DataView(x.buffer), dv2 = new DataView(y.buffer);\n        for (var i = 0; i < x.byteLength; i++)\n            if (dv1.getUint8(i) !== dv2.getUint8(i))\n                return false;\n        return true;\n    }\n    else if (x instanceof Date)\n        return x.getTime() == y.getTime();\n    else\n        return false;\n}\nexport function compare(x, y) {\n    // Optimization if they are referencially equal\n    if (x === y)\n        return 0;\n    if (x == null)\n        return y == null ? 0 : -1;\n    else if (y == null)\n        return 1; // everything is bigger than null\n    else if (Object.getPrototypeOf(x) !== Object.getPrototypeOf(y))\n        return -1;\n    else if (typeof x.CompareTo === \"function\")\n        return x.CompareTo(y);\n    else if (Array.isArray(x)) {\n        if (x.length != y.length)\n            return x.length < y.length ? -1 : 1;\n        for (var i = 0, j = 0; i < x.length; i++)\n            if ((j = compare(x[i], y[i])) !== 0)\n                return j;\n        return 0;\n    }\n    else if (ArrayBuffer.isView(x)) {\n        if (x.byteLength != y.byteLength)\n            return x.byteLength < y.byteLength ? -1 : 1;\n        var dv1 = new DataView(x.buffer), dv2 = new DataView(y.buffer);\n        for (var i = 0, b1 = 0, b2 = 0; i < x.byteLength; i++) {\n            b1 = dv1.getUint8(i), b2 = dv2.getUint8(i);\n            if (b1 < b2)\n                return -1;\n            if (b1 > b2)\n                return 1;\n        }\n        return 0;\n    }\n    else if (x instanceof Date)\n        return compare(x.getTime(), y.getTime());\n    else\n        return x < y ? -1 : 1;\n}\nexport function equalsRecords(x, y) {\n    // Optimization if they are referencially equal\n    if (x === y) {\n        return true;\n    }\n    else {\n        var keys = Object.getOwnPropertyNames(x);\n        for (var i = 0; i < keys.length; i++) {\n            if (!equals(x[keys[i]], y[keys[i]]))\n                return false;\n        }\n        return true;\n    }\n}\nexport function compareRecords(x, y) {\n    // Optimization if they are referencially equal\n    if (x === y) {\n        return 0;\n    }\n    else {\n        var keys = Object.getOwnPropertyNames(x);\n        for (var i = 0; i < keys.length; i++) {\n            var res = compare(x[keys[i]], y[keys[i]]);\n            if (res !== 0)\n                return res;\n        }\n        return 0;\n    }\n}\nexport function equalsUnions(x, y) {\n    // Optimization if they are referencially equal\n    if (x === y) {\n        return true;\n    }\n    else if (x.Case !== y.Case) {\n        return false;\n    }\n    else {\n        for (var i = 0; i < x.Fields.length; i++) {\n            if (!equals(x.Fields[i], y.Fields[i]))\n                return false;\n        }\n        return true;\n    }\n}\nexport function compareUnions(x, y) {\n    // Optimization if they are referencially equal\n    if (x === y) {\n        return 0;\n    }\n    else {\n        var res = compare(x.Case, y.Case);\n        if (res !== 0)\n            return res;\n        for (var i = 0; i < x.Fields.length; i++) {\n            res = compare(x.Fields[i], y.Fields[i]);\n            if (res !== 0)\n                return res;\n        }\n        return 0;\n    }\n}\nexport function createDisposable(f) {\n    return _a = {\n            Dispose: f\n        },\n        _a[FSymbol.reflection] = function () { return { interfaces: [\"System.IDisposable\"] }; },\n        _a;\n    var _a;\n}\nexport function createObj(fields) {\n    var iter = fields[Symbol.iterator]();\n    var cur = iter.next(), o = {};\n    while (!cur.done) {\n        o[cur.value[0]] = cur.value[1];\n        cur = iter.next();\n    }\n    return o;\n}\nexport function toPlainJsObj(source) {\n    if (source != null && source.constructor != Object) {\n        var target = {};\n        var props = Object.getOwnPropertyNames(source);\n        for (var i = 0; i < props.length; i++) {\n            target[props[i]] = source[props[i]];\n        }\n        // Copy also properties from prototype, see #192\n        var proto = Object.getPrototypeOf(source);\n        if (proto != null) {\n            props = Object.getOwnPropertyNames(proto);\n            for (var i = 0; i < props.length; i++) {\n                var prop = Object.getOwnPropertyDescriptor(proto, props[i]);\n                if (prop.value) {\n                    target[props[i]] = prop.value;\n                }\n                else if (prop.get) {\n                    target[props[i]] = prop.get.apply(source);\n                }\n            }\n        }\n        return target;\n    }\n    else {\n        return source;\n    }\n}\nexport function round(value, digits) {\n    if (digits === void 0) { digits = 0; }\n    var m = Math.pow(10, digits);\n    var n = +(digits ? value * m : value).toFixed(8);\n    var i = Math.floor(n), f = n - i;\n    var e = 1e-8;\n    var r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 == 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\n","import FSymbol from \"./Symbol\";\nimport { toString } from \"./Util\";\nimport { equals } from \"./Util\";\nimport { compare } from \"./Util\";\n// This module is split from List.ts to prevent cyclic dependencies\nexport function ofArray(args, base) {\n    var acc = base || new List();\n    for (var i = args.length - 1; i >= 0; i--) {\n        acc = new List(args[i], acc);\n    }\n    return acc;\n}\nvar List = (function () {\n    function List(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    List.prototype.ToString = function () {\n        return \"[\" + Array.from(this).map(toString).join(\"; \") + \"]\";\n    };\n    List.prototype.Equals = function (x) {\n        // Optimization if they are referencially equal\n        if (this === x) {\n            return true;\n        }\n        else {\n            var iter1 = this[Symbol.iterator](), iter2 = x[Symbol.iterator]();\n            for (;;) {\n                var cur1 = iter1.next(), cur2 = iter2.next();\n                if (cur1.done)\n                    return cur2.done ? true : false;\n                else if (cur2.done)\n                    return false;\n                else if (!equals(cur1.value, cur2.value))\n                    return false;\n            }\n        }\n    };\n    List.prototype.CompareTo = function (x) {\n        // Optimization if they are referencially equal\n        if (this === x) {\n            return 0;\n        }\n        else {\n            var acc = 0;\n            var iter1 = this[Symbol.iterator](), iter2 = x[Symbol.iterator]();\n            for (;;) {\n                var cur1 = iter1.next(), cur2 = iter2.next();\n                if (cur1.done)\n                    return cur2.done ? acc : -1;\n                else if (cur2.done)\n                    return 1;\n                else {\n                    acc = compare(cur1.value, cur2.value);\n                    if (acc != 0)\n                        return acc;\n                }\n            }\n        }\n    };\n    Object.defineProperty(List.prototype, \"length\", {\n        get: function () {\n            var cur = this, acc = 0;\n            while (cur.tail != null) {\n                cur = cur.tail;\n                acc++;\n            }\n            return acc;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    List.prototype[Symbol.iterator] = function () {\n        var cur = this;\n        return {\n            next: function () {\n                var tmp = cur;\n                cur = cur.tail;\n                return { done: tmp.tail == null, value: tmp.head };\n            }\n        };\n    };\n    //   append(ys: List<T>): List<T> {\n    //     return append(this, ys);\n    //   }\n    //   choose<U>(f: (x: T) => U, xs: List<T>): List<U> {\n    //     return choose(f, this);\n    //   }\n    //   collect<U>(f: (x: T) => List<U>): List<U> {\n    //     return collect(f, this);\n    //   }\n    //   filter(f: (x: T) => boolean): List<T> {\n    //     return filter(f, this);\n    //   }\n    //   where(f: (x: T) => boolean): List<T> {\n    //     return filter(f, this);\n    //   }\n    //   map<U>(f: (x: T) => U): List<U> {\n    //     return map(f, this);\n    //   }\n    //   mapIndexed<U>(f: (i: number, x: T) => U): List<U> {\n    //     return mapIndexed(f, this);\n    //   }\n    //   partition(f: (x: T) => boolean): [List<T>, List<T>] {\n    //     return partition(f, this) as [List<T>, List<T>];\n    //   }\n    //   reverse(): List<T> {\n    //     return reverse(this);\n    //   }\n    //   slice(lower: number, upper: number): List<T> {\n    //     return slice(lower, upper, this);\n    //   }\n    List.prototype[FSymbol.reflection] = function () {\n        return {\n            type: \"Microsoft.FSharp.Collections.FSharpList\",\n            interfaces: [\"System.IEquatable\", \"System.IComparable\"]\n        };\n    };\n    return List;\n}());\nexport default List;\n","import { equals } from \"./Util\";\nimport { compare } from \"./Util\";\nimport { permute as arrayPermute } from \"./Array\";\nimport List from \"./ListClass\";\nfunction __failIfNone(res) {\n    if (res == null)\n        throw new Error(\"Seq did not contain any matching element\");\n    return res;\n}\nexport function toList(xs) {\n    return foldBack(function (x, acc) {\n        return new List(x, acc);\n    }, xs, new List());\n}\nexport function ofList(xs) {\n    return delay(function () { return unfold(function (x) { return x.tail != null ? [x.head, x.tail] : null; }, xs); });\n}\nexport function ofArray(xs) {\n    return delay(function () { return unfold(function (i) { return i < xs.length ? [xs[i], i + 1] : null; }, 0); });\n}\nexport function append(xs, ys) {\n    return delay(function () {\n        var firstDone = false;\n        var i = xs[Symbol.iterator]();\n        var iters = [i, null];\n        return unfold(function () {\n            var cur;\n            if (!firstDone) {\n                cur = iters[0].next();\n                if (!cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [null, ys[Symbol.iterator]()];\n                }\n            }\n            cur = iters[1].next();\n            return !cur.done ? [cur.value, iters] : null;\n        }, iters);\n    });\n}\nexport function average(xs) {\n    var count = 1;\n    var sum = reduce(function (acc, x) {\n        count++;\n        return acc + x;\n    }, xs);\n    return sum / count;\n}\nexport function averageBy(f, xs) {\n    var count = 1;\n    var sum = reduce(function (acc, x) {\n        count++;\n        return (count === 2 ? f(acc) : acc) + f(x);\n    }, xs);\n    return sum / count;\n}\nexport function concat(xs) {\n    return delay(function () {\n        var iter = xs[Symbol.iterator]();\n        var output = null;\n        return unfold(function (innerIter) {\n            var hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    var cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    var cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = null;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output, innerIter] : null;\n        }, null);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    var trySkipToNext = function (iter) {\n        var cur = iter.next();\n        if (!cur.done) {\n            var y = f(cur.value);\n            return y != null ? [y, iter] : trySkipToNext(iter);\n        }\n        return void 0;\n    };\n    return delay(function () {\n        return unfold(function (iter) {\n            return trySkipToNext(iter);\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function compareWith(f, xs, ys) {\n    var nonZero = tryFind(function (i) { return i != 0; }, map2(function (x, y) { return f(x, y); }, xs, ys));\n    return nonZero != null ? nonZero : count(xs) - count(ys);\n}\nexport function delay(f) {\n    return _a = {},\n        _a[Symbol.iterator] = function () { return f()[Symbol.iterator](); },\n        _a;\n    var _a;\n}\nexport function empty() {\n    return unfold(function () { return void 0; });\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(function () { return cond() ? [xs, true] : null; }));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(function () {\n        var iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return void 0;\n        }\n        finally {\n            finalFn();\n        }\n        return unfold(function (iter) {\n            try {\n                var cur = iter.next();\n                return !cur.done ? [cur.value, iter] : null;\n            }\n            catch (err) {\n                return void 0;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    var isDisposed = false;\n    var disposeOnce = function () {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    var iter = xs[Symbol.iterator]();\n    var fst = iter.next();\n    if (fst.done)\n        throw new Error(\"Seq was empty\");\n    var snd = iter.next();\n    if (!snd.done)\n        throw new Error(\"Seq had multiple items\");\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    var exclusionItems = Array.from(itemsToExclude);\n    var testIsNotInExclusionItems = function (element) { return !exclusionItems.some(function (excludedItem) { return equals(excludedItem, element); }); };\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    function aux(iter) {\n        var cur = iter.next();\n        return !cur.done && (f(cur.value) || aux(iter));\n    }\n    return aux(xs[Symbol.iterator]());\n}\nexport function exists2(f, xs, ys) {\n    function aux(iter1, iter2) {\n        var cur1 = iter1.next(), cur2 = iter2.next();\n        return !cur1.done && !cur2.done && (f(cur1.value, cur2.value) || aux(iter1, iter2));\n    }\n    return aux(xs[Symbol.iterator](), ys[Symbol.iterator]());\n}\nexport function filter(f, xs) {\n    function trySkipToNext(iter) {\n        var cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return void 0;\n    }\n    return delay(function () { return unfold(trySkipToNext, xs[Symbol.iterator]()); });\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        var cur = void 0;\n        for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done)\n                break;\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (var i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    var iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();\n    var cur1, cur2;\n    for (var i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    var ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    var ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (var i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function forAll(f, xs) {\n    return fold(function (acc, x) { return acc && f(x); }, true, xs);\n}\nexport function forAll2(f, xs, ys) {\n    return fold2(function (acc, x, y) { return acc && f(x, y); }, true, xs, ys);\n}\nexport function tryHead(xs) {\n    var iter = xs[Symbol.iterator]();\n    var cur = iter.next();\n    return cur.done ? null : cur.value;\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(function () {\n        return unfold(function (i) { return i < n ? [f(i), i + 1] : null; }, 0);\n    });\n}\nexport function initializeInfinite(f) {\n    return delay(function () {\n        return unfold(function (i) { return [f(i), i + 1]; }, 0);\n    });\n}\nexport function tryItem(i, xs) {\n    if (i < 0)\n        return null;\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs))\n        return i < xs.length ? xs[i] : null;\n    for (var j = 0, iter = xs[Symbol.iterator]();; j++) {\n        var cur = iter.next();\n        if (cur.done)\n            return null;\n        if (j === i)\n            return cur.value;\n    }\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold(function (_, x) { return f(x); }, null, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2(function (_, x, y) { return f(x, y); }, null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold(function (_, x, i) { return f(i, x); }, null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2(function (_, x, y, i) { return f(i, x, y); }, null, xs, ys);\n}\nexport function isEmpty(xs) {\n    var i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    try {\n        return reduce(function (_, x) { return x; }, xs);\n    }\n    catch (err) {\n        return null;\n    }\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\n// A export function 'length' method causes problems in JavaScript -- https://github.com/Microsoft/TypeScript/issues/442\nexport function count(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold(function (acc, x) { return acc + 1; }, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(function () { return unfold(function (iter) {\n        var cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]()); });\n}\nexport function mapIndexed(f, xs) {\n    return delay(function () {\n        var i = 0;\n        return unfold(function (iter) {\n            var cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : null;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function map2(f, xs, ys) {\n    return delay(function () {\n        var iter1 = xs[Symbol.iterator]();\n        var iter2 = ys[Symbol.iterator]();\n        return unfold(function () {\n            var cur1 = iter1.next(), cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(function () {\n        var i = 0;\n        var iter1 = xs[Symbol.iterator]();\n        var iter2 = ys[Symbol.iterator]();\n        return unfold(function () {\n            var cur1 = iter1.next(), cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(function () {\n        var iter1 = xs[Symbol.iterator]();\n        var iter2 = ys[Symbol.iterator]();\n        var iter3 = zs[Symbol.iterator]();\n        return unfold(function () {\n            var cur1 = iter1.next(), cur2 = iter2.next(), cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n        });\n    });\n}\nexport function mapFold(f, acc, xs) {\n    var result = [];\n    var r;\n    var cur;\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done)\n            break;\n        _a = f(acc, cur.value), r = _a[0], acc = _a[1];\n        result.push(r);\n    }\n    return [result, acc];\n    var _a;\n}\nexport function mapFoldBack(f, xs, acc) {\n    var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    var result = [];\n    var r;\n    for (var i = arr.length - 1; i >= 0; i--) {\n        _a = f(arr[i], acc), r = _a[0], acc = _a[1];\n        result.push(r);\n    }\n    return [result, acc];\n    var _a;\n}\nexport function max(xs) {\n    return reduce(function (acc, x) { return compare(acc, x) === 1 ? acc : x; }, xs);\n}\nexport function maxBy(f, xs) {\n    return reduce(function (acc, x) { return compare(f(acc), f(x)) === 1 ? acc : x; }, xs);\n}\nexport function min(xs) {\n    return reduce(function (acc, x) { return compare(acc, x) === -1 ? acc : x; }, xs);\n}\nexport function minBy(f, xs) {\n    return reduce(function (acc, x) { return compare(f(acc), f(x)) === -1 ? acc : x; }, xs);\n}\nexport function pairwise(xs) {\n    return skip(2, scan(function (last, next) { return [last[1], next]; }, [0, 0], xs));\n}\nexport function permute(f, xs) {\n    return ofArray(arrayPermute(f, Array.from(xs)));\n}\nexport function rangeStep(first, step, last) {\n    if (step === 0)\n        throw new Error(\"Step cannot be 0\");\n    return delay(function () { return unfold(function (x) { return step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null; }, first); });\n}\nexport function rangeChar(first, last) {\n    return delay(function () { return unfold(function (x) { return x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null; }, first); });\n}\nexport function range(first, last) {\n    return rangeStep(first, 1, last);\n}\nexport function readOnly(xs) {\n    return map(function (x) { return x; }, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs))\n        return xs.reduce(f);\n    var iter = xs[Symbol.iterator]();\n    var cur = iter.next();\n    if (cur.done)\n        throw new Error(\"Seq was empty\");\n    var acc = cur.value;\n    for (;;) {\n        cur = iter.next();\n        if (cur.done)\n            break;\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0)\n        throw new Error(\"Seq was empty\");\n    var acc = ar[ar.length - 1];\n    for (var i = ar.length - 2; i >= 0; i--)\n        acc = f(ar[i], acc, i);\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, function () { return x; });\n}\nexport function reverse(xs) {\n    var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(function () {\n        var iter = xs[Symbol.iterator]();\n        return unfold(function (acc) {\n            if (acc == null)\n                return [seed, seed];\n            var cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return void 0;\n        }, null);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan(function (acc, x) { return f(x, acc); }, seed, reverse(xs)));\n}\nexport function singleton(x) {\n    return unfold(function (x) { return x != null ? [x, null] : null; }, x);\n}\nexport function skip(n, xs) {\n    return _a = {},\n        _a[Symbol.iterator] = function () {\n            var iter = xs[Symbol.iterator]();\n            for (var i = 1; i <= n; i++)\n                if (iter.next().done)\n                    throw new Error(\"Seq has not enough elements\");\n            return iter;\n        },\n        _a;\n    var _a;\n}\nexport function skipWhile(f, xs) {\n    return delay(function () {\n        var hasPassed = false;\n        return filter(function (x) { return hasPassed || (hasPassed = !f(x)); }, xs);\n    });\n}\nexport function sortWith(f, xs) {\n    var ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs) {\n    return fold(function (acc, x) { return acc + x; }, 0, xs);\n}\nexport function sumBy(f, xs) {\n    return fold(function (acc, x) { return acc + f(x); }, 0, xs);\n}\nexport function tail(xs) {\n    var iter = xs[Symbol.iterator]();\n    var cur = iter.next();\n    if (cur.done)\n        throw new Error(\"Seq was empty\");\n    return _a = {},\n        _a[Symbol.iterator] = function () { return iter; },\n        _a;\n    var _a;\n}\nexport function take(n, xs, truncate) {\n    if (truncate === void 0) { truncate = false; }\n    return delay(function () {\n        var iter = xs[Symbol.iterator]();\n        return unfold(function (i) {\n            if (i < n) {\n                var cur = iter.next();\n                if (!cur.done)\n                    return [cur.value, i + 1];\n                if (!truncate)\n                    throw new Error(\"Seq has not enough elements\");\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(function () {\n        var iter = xs[Symbol.iterator]();\n        return unfold(function (i) {\n            var cur = iter.next();\n            if (!cur.done && f(cur.value))\n                return [cur.value, null];\n            return void 0;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n        var cur = iter.next();\n        if (cur.done)\n            return defaultValue === void 0 ? null : defaultValue;\n        if (f(cur.value, i))\n            return cur.value;\n    }\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    var match = null;\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n        var cur = iter.next();\n        if (cur.done)\n            return match === null ? (defaultValue === void 0 ? null : defaultValue) : match;\n        if (f(cur.value, i))\n            match = cur.value;\n    }\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n        var cur = iter.next();\n        if (cur.done)\n            return null;\n        if (f(cur.value, i))\n            return i;\n    }\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    var match = -1;\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n        var cur = iter.next();\n        if (cur.done)\n            return match === -1 ? null : match;\n        if (f(cur.value, i))\n            match = i;\n    }\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n        var cur = iter.next();\n        if (cur.done)\n            break;\n        var y = f(cur.value, i);\n        if (y != null)\n            return y;\n    }\n    return void 0;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, acc) {\n    return _a = {},\n        _a[Symbol.iterator] = function () {\n            return {\n                next: function () {\n                    var res = f(acc);\n                    if (res != null) {\n                        acc = res[1];\n                        return { done: false, value: res[0] };\n                    }\n                    return { done: true };\n                }\n            };\n        },\n        _a;\n    var _a;\n}\nexport function zip(xs, ys) {\n    return map2(function (x, y) { return [x, y]; }, xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3(function (x, y, z) { return [x, y, z]; }, xs, ys, zs);\n}\n","import { compare } from \"./Util\";\nimport FSymbol from \"./Symbol\";\nvar GenericComparer = (function () {\n    function GenericComparer(f) {\n        this.Compare = f || compare;\n    }\n    GenericComparer.prototype[FSymbol.reflection] = function () {\n        return { interfaces: [\"System.IComparer\"] };\n    };\n    return GenericComparer;\n}());\nexport default GenericComparer;\n","import List from \"./ListClass\";\nimport { ofArray as listOfArray } from \"./ListClass\";\nimport { toString } from \"./Util\";\nimport { equals } from \"./Util\";\nimport { compare } from \"./Util\";\nimport GenericComparer from \"./GenericComparer\";\nimport FSymbol from \"./Symbol\";\nimport { map as seqMap } from \"./Seq\";\nimport { fold as seqFold } from \"./Seq\";\nimport { pick as seqPick } from \"./Seq\";\nimport { tryPick as seqTryPick } from \"./Seq\";\nimport { compareWith as seqCompareWith } from \"./Seq\";\n// ----------------------------------------------\n// These functions belong to Seq.ts but are\n// implemented here to prevent cyclic dependencies\nexport function groupBy(f, xs) {\n    var keys = [], iter = xs[Symbol.iterator]();\n    var acc = create(), cur = iter.next();\n    while (!cur.done) {\n        var k = f(cur.value), vs = tryFind(k, acc);\n        if (vs == null) {\n            keys.push(k);\n            acc = add(k, [cur.value], acc);\n        }\n        else {\n            vs.push(cur.value);\n        }\n        cur = iter.next();\n    }\n    return keys.map(function (k) { return [k, acc.get(k)]; });\n}\nexport function countBy(f, xs) {\n    return groupBy(f, xs).map(function (kv) { return [kv[0], kv[1].length]; });\n}\nvar MapTree = (function () {\n    function MapTree(caseName, fields) {\n        this.Case = caseName;\n        this.Fields = fields;\n    }\n    return MapTree;\n}());\nexport { MapTree };\nfunction tree_sizeAux(acc, m) {\n    return m.Case === \"MapOne\"\n        ? acc + 1\n        : m.Case === \"MapNode\"\n            ? tree_sizeAux(tree_sizeAux(acc + 1, m.Fields[2]), m.Fields[3])\n            : acc;\n}\nfunction tree_size(x) {\n    return tree_sizeAux(0, x);\n}\nfunction tree_empty() {\n    return new MapTree(\"MapEmpty\", []);\n}\nfunction tree_height(_arg1) {\n    return _arg1.Case === \"MapOne\" ? 1 : _arg1.Case === \"MapNode\" ? _arg1.Fields[4] : 0;\n}\nfunction tree_isEmpty(m) {\n    return m.Case === \"MapEmpty\" ? true : false;\n}\nfunction tree_mk(l, k, v, r) {\n    var matchValue = [l, r];\n    var $target1 = function () {\n        var hl = tree_height(l);\n        var hr = tree_height(r);\n        var m = hl < hr ? hr : hl;\n        return new MapTree(\"MapNode\", [k, v, l, r, m + 1]);\n    };\n    if (matchValue[0].Case === \"MapEmpty\") {\n        if (matchValue[1].Case === \"MapEmpty\") {\n            return new MapTree(\"MapOne\", [k, v]);\n        }\n        else {\n            return $target1();\n        }\n    }\n    else {\n        return $target1();\n    }\n}\n;\nfunction tree_rebalance(t1, k, v, t2) {\n    var t1h = tree_height(t1);\n    var t2h = tree_height(t2);\n    if (t2h > t1h + 2) {\n        if (t2.Case === \"MapNode\") {\n            if (tree_height(t2.Fields[2]) > t1h + 1) {\n                if (t2.Fields[2].Case === \"MapNode\") {\n                    return tree_mk(tree_mk(t1, k, v, t2.Fields[2].Fields[2]), t2.Fields[2].Fields[0], t2.Fields[2].Fields[1], tree_mk(t2.Fields[2].Fields[3], t2.Fields[0], t2.Fields[1], t2.Fields[3]));\n                }\n                else {\n                    throw new Error(\"rebalance\");\n                }\n            }\n            else {\n                return tree_mk(tree_mk(t1, k, v, t2.Fields[2]), t2.Fields[0], t2.Fields[1], t2.Fields[3]);\n            }\n        }\n        else {\n            throw new Error(\"rebalance\");\n        }\n    }\n    else {\n        if (t1h > t2h + 2) {\n            if (t1.Case === \"MapNode\") {\n                if (tree_height(t1.Fields[3]) > t2h + 1) {\n                    if (t1.Fields[3].Case === \"MapNode\") {\n                        return tree_mk(tree_mk(t1.Fields[2], t1.Fields[0], t1.Fields[1], t1.Fields[3].Fields[2]), t1.Fields[3].Fields[0], t1.Fields[3].Fields[1], tree_mk(t1.Fields[3].Fields[3], k, v, t2));\n                    }\n                    else {\n                        throw new Error(\"rebalance\");\n                    }\n                }\n                else {\n                    return tree_mk(t1.Fields[2], t1.Fields[0], t1.Fields[1], tree_mk(t1.Fields[3], k, v, t2));\n                }\n            }\n            else {\n                throw new Error(\"rebalance\");\n            }\n        }\n        else {\n            return tree_mk(t1, k, v, t2);\n        }\n    }\n}\nfunction tree_add(comparer, k, v, m) {\n    if (m.Case === \"MapOne\") {\n        var c = comparer.Compare(k, m.Fields[0]);\n        if (c < 0) {\n            return new MapTree(\"MapNode\", [k, v, new MapTree(\"MapEmpty\", []), m, 2]);\n        }\n        else if (c === 0) {\n            return new MapTree(\"MapOne\", [k, v]);\n        }\n        return new MapTree(\"MapNode\", [k, v, m, new MapTree(\"MapEmpty\", []), 2]);\n    }\n    else if (m.Case === \"MapNode\") {\n        var c = comparer.Compare(k, m.Fields[0]);\n        if (c < 0) {\n            return tree_rebalance(tree_add(comparer, k, v, m.Fields[2]), m.Fields[0], m.Fields[1], m.Fields[3]);\n        }\n        else if (c === 0) {\n            return new MapTree(\"MapNode\", [k, v, m.Fields[2], m.Fields[3], m.Fields[4]]);\n        }\n        return tree_rebalance(m.Fields[2], m.Fields[0], m.Fields[1], tree_add(comparer, k, v, m.Fields[3]));\n    }\n    return new MapTree(\"MapOne\", [k, v]);\n}\nfunction tree_find(comparer, k, m) {\n    var res = tree_tryFind(comparer, k, m);\n    if (res != null)\n        return res;\n    throw new Error(\"key not found\");\n}\nfunction tree_tryFind(comparer, k, m) {\n    if (m.Case === \"MapOne\") {\n        var c = comparer.Compare(k, m.Fields[0]);\n        return c === 0 ? m.Fields[1] : null;\n    }\n    else if (m.Case === \"MapNode\") {\n        var c = comparer.Compare(k, m.Fields[0]);\n        if (c < 0) {\n            return tree_tryFind(comparer, k, m.Fields[2]);\n        }\n        else {\n            if (c === 0) {\n                return m.Fields[1];\n            }\n            else {\n                return tree_tryFind(comparer, k, m.Fields[3]);\n            }\n        }\n    }\n    return null;\n}\nfunction tree_partition1(comparer, f, k, v, acc1, acc2) {\n    return f(k, v) ? [tree_add(comparer, k, v, acc1), acc2] : [acc1, tree_add(comparer, k, v, acc2)];\n}\nfunction tree_partitionAux(comparer, f, s, acc_0, acc_1) {\n    var acc = [acc_0, acc_1];\n    if (s.Case === \"MapOne\") {\n        return tree_partition1(comparer, f, s.Fields[0], s.Fields[1], acc[0], acc[1]);\n    }\n    else if (s.Case === \"MapNode\") {\n        var acc_2 = tree_partitionAux(comparer, f, s.Fields[3], acc[0], acc[1]);\n        var acc_3 = tree_partition1(comparer, f, s.Fields[0], s.Fields[1], acc_2[0], acc_2[1]);\n        return tree_partitionAux(comparer, f, s.Fields[2], acc_3[0], acc_3[1]);\n    }\n    return acc;\n}\nfunction tree_partition(comparer, f, s) {\n    return tree_partitionAux(comparer, f, s, tree_empty(), tree_empty());\n}\nfunction tree_filter1(comparer, f, k, v, acc) {\n    return f(k, v) ? tree_add(comparer, k, v, acc) : acc;\n}\nfunction tree_filterAux(comparer, f, s, acc) {\n    return s.Case === \"MapOne\" ? tree_filter1(comparer, f, s.Fields[0], s.Fields[1], acc) : s.Case === \"MapNode\" ? (function () {\n        var acc_1 = tree_filterAux(comparer, f, s.Fields[2], acc);\n        var acc_2 = tree_filter1(comparer, f, s.Fields[0], s.Fields[1], acc_1);\n        return tree_filterAux(comparer, f, s.Fields[3], acc_2);\n    })() : acc;\n}\nfunction tree_filter(comparer, f, s) {\n    return tree_filterAux(comparer, f, s, tree_empty());\n}\nfunction tree_spliceOutSuccessor(m) {\n    if (m.Case === \"MapOne\") {\n        return [m.Fields[0], m.Fields[1], new MapTree(\"MapEmpty\", [])];\n    }\n    else if (m.Case === \"MapNode\") {\n        if (m.Fields[2].Case === \"MapEmpty\") {\n            return [m.Fields[0], m.Fields[1], m.Fields[3]];\n        }\n        else {\n            var kvl = tree_spliceOutSuccessor(m.Fields[2]);\n            return [kvl[0], kvl[1], tree_mk(kvl[2], m.Fields[0], m.Fields[1], m.Fields[3])];\n        }\n    }\n    throw new Error(\"internal error: Map.spliceOutSuccessor\");\n}\nfunction tree_remove(comparer, k, m) {\n    if (m.Case === \"MapOne\") {\n        var c = comparer.Compare(k, m.Fields[0]);\n        if (c === 0) {\n            return new MapTree(\"MapEmpty\", []);\n        }\n        else {\n            return m;\n        }\n    }\n    else if (m.Case === \"MapNode\") {\n        var c = comparer.Compare(k, m.Fields[0]);\n        if (c < 0) {\n            return tree_rebalance(tree_remove(comparer, k, m.Fields[2]), m.Fields[0], m.Fields[1], m.Fields[3]);\n        }\n        else {\n            if (c === 0) {\n                var matchValue = [m.Fields[2], m.Fields[3]];\n                if (matchValue[0].Case === \"MapEmpty\") {\n                    return m.Fields[3];\n                }\n                else {\n                    if (matchValue[1].Case === \"MapEmpty\") {\n                        return m.Fields[2];\n                    }\n                    else {\n                        var patternInput = tree_spliceOutSuccessor(m.Fields[3]);\n                        var sv = patternInput[1];\n                        var sk = patternInput[0];\n                        var r_ = patternInput[2];\n                        return tree_mk(m.Fields[2], sk, sv, r_);\n                    }\n                }\n            }\n            else {\n                return tree_rebalance(m.Fields[2], m.Fields[0], m.Fields[1], tree_remove(comparer, k, m.Fields[3]));\n            }\n        }\n    }\n    else {\n        return tree_empty();\n    }\n}\nfunction tree_mem(comparer, k, m) {\n    return m.Case === \"MapOne\" ? comparer.Compare(k, m.Fields[0]) === 0 : m.Case === \"MapNode\" ? (function () {\n        var c = comparer.Compare(k, m.Fields[0]);\n        if (c < 0) {\n            return tree_mem(comparer, k, m.Fields[2]);\n        }\n        else {\n            if (c === 0) {\n                return true;\n            }\n            else {\n                return tree_mem(comparer, k, m.Fields[3]);\n            }\n        }\n    })() : false;\n}\nfunction tree_iter(f, m) {\n    if (m.Case === \"MapOne\") {\n        f(m.Fields[0], m.Fields[1]);\n    }\n    else if (m.Case === \"MapNode\") {\n        tree_iter(f, m.Fields[2]);\n        f(m.Fields[0], m.Fields[1]);\n        tree_iter(f, m.Fields[3]);\n    }\n}\nfunction tree_tryPick(f, m) {\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? (function () {\n        var matchValue = tree_tryPick(f, m.Fields[2]);\n        if (matchValue == null) {\n            var matchValue_1 = f(m.Fields[0], m.Fields[1]);\n            if (matchValue_1 == null) {\n                return tree_tryPick(f, m.Fields[3]);\n            }\n            else {\n                var res = matchValue_1;\n                return res;\n            }\n        }\n        else {\n            var res = matchValue;\n            return res;\n        }\n    })() : null;\n}\nfunction tree_exists(f, m) {\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? (tree_exists(f, m.Fields[2]) ? true : f(m.Fields[0], m.Fields[1])) ? true : tree_exists(f, m.Fields[3]) : false;\n}\nfunction tree_forall(f, m) {\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? (tree_forall(f, m.Fields[2]) ? f(m.Fields[0], m.Fields[1]) : false) ? tree_forall(f, m.Fields[3]) : false : true;\n}\n// function tree_map(f: (v:any) => any, m: MapTree): MapTree {\n//   return m.Case === \"MapOne\" ? new MapTree(\"MapOne\", [m.Fields[0], f(m.Fields[1])]) : m.Case === \"MapNode\" ? (() => {\n//     var l2 = tree_map(f, m.Fields[2]);\n//     var v2 = f(m.Fields[1]);\n//     var r2 = tree_map(f, m.Fields[3]);\n//     return new MapTree(\"MapNode\", [m.Fields[0], v2, l2, r2, m.Fields[4]]);\n//   })() : tree_empty();\n// }\nfunction tree_mapi(f, m) {\n    return m.Case === \"MapOne\" ? new MapTree(\"MapOne\", [m.Fields[0], f(m.Fields[0], m.Fields[1])]) : m.Case === \"MapNode\" ? (function () {\n        var l2 = tree_mapi(f, m.Fields[2]);\n        var v2 = f(m.Fields[0], m.Fields[1]);\n        var r2 = tree_mapi(f, m.Fields[3]);\n        return new MapTree(\"MapNode\", [m.Fields[0], v2, l2, r2, m.Fields[4]]);\n    })() : tree_empty();\n}\nfunction tree_foldBack(f, m, x) {\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1], x) : m.Case === \"MapNode\" ? (function () {\n        var x_1 = tree_foldBack(f, m.Fields[3], x);\n        var x_2 = f(m.Fields[0], m.Fields[1], x_1);\n        return tree_foldBack(f, m.Fields[2], x_2);\n    })() : x;\n}\nfunction tree_fold(f, x, m) {\n    return m.Case === \"MapOne\" ? f(x, m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? (function () {\n        var x_1 = tree_fold(f, x, m.Fields[2]);\n        var x_2 = f(x_1, m.Fields[0], m.Fields[1]);\n        return tree_fold(f, x_2, m.Fields[3]);\n    })() : x;\n}\n// function tree_foldFromTo(comparer: IComparer<any>, lo: any, hi: any, f: (k:any, v:any, acc: any) => any, m: MapTree, x: any): any {\n//   if (m.Case === \"MapOne\") {\n//     var cLoKey = comparer.Compare(lo, m.Fields[0]);\n//     var cKeyHi = comparer.Compare(m.Fields[0], hi);\n//     var x_1 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f(m.Fields[0], m.Fields[1], x) : x;\n//     return x_1;\n//   }\n//   else if (m.Case === \"MapNode\") {\n//     var cLoKey = comparer.Compare(lo, m.Fields[0]);\n//     var cKeyHi = comparer.Compare(m.Fields[0], hi);\n//     var x_1 = cLoKey < 0 ? tree_foldFromTo(comparer, lo, hi, f, m.Fields[2], x) : x;\n//     var x_2 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f(m.Fields[0], m.Fields[1], x_1) : x_1;\n//     var x_3 = cKeyHi < 0 ? tree_foldFromTo(comparer, lo, hi, f, m.Fields[3], x_2) : x_2;\n//     return x_3;\n//   }\n//   return x;\n// }\n// function tree_foldSection(comparer: IComparer<any>, lo: any, hi: any, f: (k:any, v:any, acc: any) => any, m: MapTree, x: any) {\n//   return comparer.Compare(lo, hi) === 1 ? x : tree_foldFromTo(comparer, lo, hi, f, m, x);\n// }\n// function tree_loop(m: MapTree, acc: any): List<[any,any]> {\n//   return m.Case === \"MapOne\"\n//     ? new List([m.Fields[0], m.Fields[1]], acc)\n//     : m.Case === \"MapNode\"\n//       ? tree_loop(m.Fields[2], new List([m.Fields[0], m.Fields[1]], tree_loop(m.Fields[3], acc)))\n//       : acc;\n// }\n// function tree_toList(m: MapTree) {\n//   return tree_loop(m, new List());\n// }\n// function tree_toArray(m: MapTree) {\n//   return Array.from(tree_toList(m));\n// }\n// function tree_ofList(comparer: IComparer<any>, l: List<[any,any]>) {\n//   return Seq.fold((acc: MapTree, tupledArg: [any, any]) => {\n//     return tree_add(comparer, tupledArg[0], tupledArg[1], acc);\n//   }, tree_empty(), l);\n// }\nfunction tree_mkFromEnumerator(comparer, acc, e) {\n    var cur = e.next();\n    while (!cur.done) {\n        acc = tree_add(comparer, cur.value[0], cur.value[1], acc);\n        cur = e.next();\n    }\n    return acc;\n}\n// function tree_ofArray(comparer: IComparer<any>, arr: ArrayLike<[any,any]>) {\n//   var res = tree_empty();\n//   for (var i = 0; i <= arr.length - 1; i++) {\n//     res = tree_add(comparer, arr[i][0], arr[i][1], res);\n//   }\n//   return res;\n// }\nfunction tree_ofSeq(comparer, c) {\n    var ie = c[Symbol.iterator]();\n    return tree_mkFromEnumerator(comparer, tree_empty(), ie);\n}\n// function tree_copyToArray(s: MapTree, arr: ArrayLike<any>, i: number) {\n//   tree_iter((x, y) => { arr[i++] = [x, y]; }, s);\n// }\nfunction tree_collapseLHS(stack) {\n    if (stack.tail != null) {\n        if (stack.head.Case === \"MapOne\") {\n            return stack;\n        }\n        else if (stack.head.Case === \"MapNode\") {\n            return tree_collapseLHS(listOfArray([\n                stack.head.Fields[2],\n                new MapTree(\"MapOne\", [stack.head.Fields[0], stack.head.Fields[1]]),\n                stack.head.Fields[3]\n            ], stack.tail));\n        }\n        else {\n            return tree_collapseLHS(stack.tail);\n        }\n    }\n    else {\n        return new List();\n    }\n}\nfunction tree_mkIterator(s) {\n    return { stack: tree_collapseLHS(new List(s, new List())), started: false };\n}\nfunction tree_moveNext(i) {\n    function current(i) {\n        if (i.stack.tail == null) {\n            return null;\n        }\n        else if (i.stack.head.Case === \"MapOne\") {\n            return [i.stack.head.Fields[0], i.stack.head.Fields[1]];\n        }\n        throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n    if (i.started) {\n        if (i.stack.tail == null) {\n            return { done: true, value: null };\n        }\n        else {\n            if (i.stack.head.Case === \"MapOne\") {\n                i.stack = tree_collapseLHS(i.stack.tail);\n                return {\n                    done: i.stack.tail == null,\n                    value: current(i)\n                };\n            }\n            else {\n                throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n            }\n        }\n    }\n    else {\n        i.started = true;\n        return {\n            done: i.stack.tail == null,\n            value: current(i)\n        };\n    }\n    ;\n}\nvar FMap = (function () {\n    /** Do not call, use Map.create instead. */\n    function FMap() {\n    }\n    FMap.prototype.ToString = function () {\n        return \"map [\" + Array.from(this).map(toString).join(\"; \") + \"]\";\n    };\n    FMap.prototype.Equals = function (m2) {\n        return this.CompareTo(m2) === 0;\n    };\n    FMap.prototype.CompareTo = function (m2) {\n        var _this = this;\n        return this === m2 ? 0 : seqCompareWith(function (kvp1, kvp2) {\n            var c = _this.comparer.Compare(kvp1[0], kvp2[0]);\n            return c !== 0 ? c : compare(kvp1[1], kvp2[1]);\n        }, this, m2);\n    };\n    FMap.prototype[Symbol.iterator] = function () {\n        var i = tree_mkIterator(this.tree);\n        return {\n            next: function () { return tree_moveNext(i); }\n        };\n    };\n    FMap.prototype.entries = function () {\n        return this[Symbol.iterator]();\n    };\n    FMap.prototype.keys = function () {\n        return seqMap(function (kv) { return kv[0]; }, this);\n    };\n    FMap.prototype.values = function () {\n        return seqMap(function (kv) { return kv[1]; }, this);\n    };\n    FMap.prototype.get = function (k) {\n        return tree_find(this.comparer, k, this.tree);\n    };\n    FMap.prototype.has = function (k) {\n        return tree_mem(this.comparer, k, this.tree);\n    };\n    /** Not supported */\n    FMap.prototype.set = function (k, v) {\n        throw new Error(\"not supported\");\n    };\n    /** Not supported */\n    FMap.prototype.delete = function (k) {\n        throw new Error(\"not supported\");\n    };\n    /** Not supported */\n    FMap.prototype.clear = function () {\n        throw new Error(\"not supported\");\n    };\n    Object.defineProperty(FMap.prototype, \"size\", {\n        get: function () {\n            return tree_size(this.tree);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FMap.prototype[FSymbol.reflection] = function () {\n        return {\n            type: \"Microsoft.FSharp.Collections.FSharpMap\",\n            interfaces: [\"System.IEquatable\", \"System.IComparable\"]\n        };\n    };\n    return FMap;\n}());\nexport default FMap;\nfunction from(comparer, tree) {\n    var map = new FMap();\n    map.tree = tree;\n    map.comparer = comparer || new GenericComparer();\n    return map;\n}\nexport function create(ie, comparer) {\n    comparer = comparer || new GenericComparer();\n    return from(comparer, ie ? tree_ofSeq(comparer, ie) : tree_empty());\n}\nexport function add(k, v, map) {\n    return from(map.comparer, tree_add(map.comparer, k, v, map.tree));\n}\nexport function remove(item, map) {\n    return from(map.comparer, tree_remove(map.comparer, item, map.tree));\n}\nexport function containsValue(v, map) {\n    return seqFold(function (acc, k) { return acc || equals(map.get(k), v); }, false, map.keys());\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function exists(f, map) {\n    return tree_exists(f, map.tree);\n}\nexport function find(k, map) {\n    return tree_find(map.comparer, k, map.tree);\n}\nexport function tryFind(k, map) {\n    return tree_tryFind(map.comparer, k, map.tree);\n}\nexport function filter(f, map) {\n    return from(map.comparer, tree_filter(map.comparer, f, map.tree));\n}\nexport function fold(f, seed, map) {\n    return tree_fold(f, seed, map.tree);\n}\nexport function foldBack(f, map, seed) {\n    return tree_foldBack(f, map.tree, seed);\n}\nexport function forAll(f, map) {\n    return tree_forall(f, map.tree);\n}\nexport function isEmpty(map) {\n    return tree_isEmpty(map.tree);\n}\nexport function iterate(f, map) {\n    tree_iter(f, map.tree);\n}\nexport function map(f, map) {\n    return from(map.comparer, tree_mapi(f, map.tree));\n}\nexport function partition(f, map) {\n    var rs = tree_partition(map.comparer, f, map.tree);\n    return [from(map.comparer, rs[0]), from(map.comparer, rs[1])];\n}\nexport function findKey(f, map) {\n    return seqPick(function (kv) { return f(kv[0], kv[1]) ? kv[0] : null; }, map);\n}\nexport function tryFindKey(f, map) {\n    return seqTryPick(function (kv) { return f(kv[0], kv[1]) ? kv[0] : null; }, map);\n}\nexport function pick(f, map) {\n    var res = tryPick(f, map);\n    if (res != null)\n        return res;\n    throw new Error(\"key not found\");\n}\nexport function tryPick(f, map) {\n    return tree_tryPick(f, map.tree);\n}\n","import List from \"./ListClass\";\nimport { map as seqMap } from \"./Seq\";\nimport { fold as seqFold } from \"./Seq\";\nimport { foldBack as seqFoldBack } from \"./Seq\";\nimport { toList as seqToList } from \"./Seq\";\nimport { groupBy as mapGroupBy } from \"./Map\";\nexport default List;\nexport { ofArray } from \"./ListClass\";\nexport function append(xs, ys) {\n    return seqFold(function (acc, x) { return new List(x, acc); }, ys, reverse(xs));\n}\nexport function choose(f, xs) {\n    var r = seqFold(function (acc, x) {\n        var y = f(x);\n        return y != null ? new List(y, acc) : acc;\n    }, new List(), xs);\n    return reverse(r);\n}\nexport function collect(f, xs) {\n    return seqFold(function (acc, x) { return append(acc, f(x)); }, new List(), xs);\n}\n// TODO: should be xs: Iterable<List<T>>\nexport function concat(xs) {\n    return collect(function (x) { return x; }, xs);\n}\nexport function filter(f, xs) {\n    return reverse(seqFold(function (acc, x) { return f(x) ? new List(x, acc) : acc; }, new List(), xs));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"List length must be non-negative\");\n    }\n    var xs = new List();\n    for (var i = 1; i <= n; i++) {\n        xs = new List(f(n - i), xs);\n    }\n    return xs;\n}\nexport function map(f, xs) {\n    return reverse(seqFold(function (acc, x) { return new List(f(x), acc); }, new List(), xs));\n}\nexport function mapIndexed(f, xs) {\n    return reverse(seqFold(function (acc, x, i) { return new List(f(i, x), acc); }, new List(), xs));\n}\nexport function partition(f, xs) {\n    return seqFold(function (acc, x) {\n        var lacc = acc[0], racc = acc[1];\n        return f(x) ? [new List(x, lacc), racc] : [lacc, new List(x, racc)];\n    }, [new List(), new List()], reverse(xs));\n}\nexport function replicate(n, x) {\n    return initialize(n, function () { return x; });\n}\nexport function reverse(xs) {\n    return seqFold(function (acc, x) { return new List(x, acc); }, new List(), xs);\n}\nexport function singleton(x) {\n    return new List(x, new List());\n}\nexport function slice(lower, upper, xs) {\n    var noLower = (lower == null);\n    var noUpper = (upper == null);\n    return reverse(seqFold(function (acc, x, i) { return (noLower || lower <= i) && (noUpper || i <= upper) ? new List(x, acc) : acc; }, new List(), xs));\n}\n/* ToDo: instance unzip() */\nexport function unzip(xs) {\n    return seqFoldBack(function (xy, acc) {\n        return [new List(xy[0], acc[0]), new List(xy[1], acc[1])];\n    }, xs, [new List(), new List()]);\n}\n/* ToDo: instance unzip3() */\nexport function unzip3(xs) {\n    return seqFoldBack(function (xyz, acc) {\n        return [new List(xyz[0], acc[0]), new List(xyz[1], acc[1]), new List(xyz[2], acc[2])];\n    }, xs, [new List(), new List(), new List()]);\n}\nexport function groupBy(f, xs) {\n    return seqToList(seqMap(function (k) { return [k[0], seqToList(k[1])]; }, mapGroupBy(f, xs)));\n}\n","import List from \"./List\";\nimport { ofArray as listOfArray } from \"./List\";\nimport { toString } from \"./Util\";\nimport GenericComparer from \"./GenericComparer\";\nimport FSymbol from \"./Symbol\";\nimport { iterate as seqIterate } from \"./Seq\";\nimport { fold as seqFold } from \"./Seq\";\nimport { reduce as seqReduce } from \"./Seq\";\nimport { forAll as seqForAll } from \"./Seq\";\nimport { exists as seqExists } from \"./Seq\";\nimport { choose as seqChoose } from \"./Seq\";\nimport { scan as seqScan } from \"./Seq\";\n// ----------------------------------------------\n// These functions belong to Seq.ts but are\n// implemented here to prevent cyclic dependencies\nexport function distinctBy(f, xs) {\n    return seqChoose(function (tup) { return tup[0]; }, seqScan(function (tup, x) {\n        var acc = tup[1];\n        var k = f(x);\n        return acc.has(k) ? [null, acc] : [x, add(k, acc)];\n    }, [null, create()], xs));\n}\nexport function distinct(xs) {\n    return distinctBy(function (x) { return x; }, xs);\n}\nvar SetTree = (function () {\n    function SetTree(caseName, fields) {\n        this.Case = caseName;\n        this.Fields = fields;\n    }\n    return SetTree;\n}());\nexport { SetTree };\nvar tree_tolerance = 2;\nfunction tree_countAux(s, acc) {\n    return s.Case === \"SetOne\" ? acc + 1 : s.Case === \"SetEmpty\" ? acc : tree_countAux(s.Fields[1], tree_countAux(s.Fields[2], acc + 1));\n}\nfunction tree_count(s) {\n    return tree_countAux(s, 0);\n}\nfunction tree_SetOne(n) {\n    return new SetTree(\"SetOne\", [n]);\n}\nfunction tree_SetNode(x, l, r, h) {\n    return new SetTree(\"SetNode\", [x, l, r, h]);\n}\nfunction tree_height(t) {\n    return t.Case === \"SetOne\" ? 1 : t.Case === \"SetNode\" ? t.Fields[3] : 0;\n}\nfunction tree_mk(l, k, r) {\n    var matchValue = [l, r];\n    var $target1 = function () {\n        var hl = tree_height(l);\n        var hr = tree_height(r);\n        var m = hl < hr ? hr : hl;\n        return tree_SetNode(k, l, r, m + 1);\n    };\n    if (matchValue[0].Case === \"SetEmpty\") {\n        if (matchValue[1].Case === \"SetEmpty\") {\n            return tree_SetOne(k);\n        }\n        else {\n            return $target1();\n        }\n    }\n    else {\n        return $target1();\n    }\n}\nfunction tree_rebalance(t1, k, t2) {\n    var t1h = tree_height(t1);\n    var t2h = tree_height(t2);\n    if (t2h > t1h + tree_tolerance) {\n        if (t2.Case === \"SetNode\") {\n            if (tree_height(t2.Fields[1]) > t1h + 1) {\n                if (t2.Fields[1].Case === \"SetNode\") {\n                    return tree_mk(tree_mk(t1, k, t2.Fields[1].Fields[1]), t2.Fields[1].Fields[0], tree_mk(t2.Fields[1].Fields[2], t2.Fields[0], t2.Fields[2]));\n                }\n                else {\n                    throw new Error(\"rebalance\");\n                }\n            }\n            else {\n                return tree_mk(tree_mk(t1, k, t2.Fields[1]), t2.Fields[0], t2.Fields[2]);\n            }\n        }\n        else {\n            throw new Error(\"rebalance\");\n        }\n    }\n    else {\n        if (t1h > t2h + tree_tolerance) {\n            if (t1.Case === \"SetNode\") {\n                if (tree_height(t1.Fields[2]) > t2h + 1) {\n                    if (t1.Fields[2].Case === \"SetNode\") {\n                        return tree_mk(tree_mk(t1.Fields[1], t1.Fields[0], t1.Fields[2].Fields[1]), t1.Fields[2].Fields[0], tree_mk(t1.Fields[2].Fields[2], k, t2));\n                    }\n                    else {\n                        throw new Error(\"rebalance\");\n                    }\n                }\n                else {\n                    return tree_mk(t1.Fields[1], t1.Fields[0], tree_mk(t1.Fields[2], k, t2));\n                }\n            }\n            else {\n                throw new Error(\"rebalance\");\n            }\n        }\n        else {\n            return tree_mk(t1, k, t2);\n        }\n    }\n}\nfunction tree_add(comparer, k, t) {\n    return t.Case === \"SetOne\" ? (function () {\n        var c = comparer.Compare(k, t.Fields[0]);\n        if (c < 0) {\n            return tree_SetNode(k, new SetTree(\"SetEmpty\", []), t, 2);\n        }\n        else {\n            if (c === 0) {\n                return t;\n            }\n            else {\n                return tree_SetNode(k, t, new SetTree(\"SetEmpty\", []), 2);\n            }\n        }\n    })() : t.Case === \"SetEmpty\" ? tree_SetOne(k) : (function () {\n        var c = comparer.Compare(k, t.Fields[0]);\n        if (c < 0) {\n            return tree_rebalance(tree_add(comparer, k, t.Fields[1]), t.Fields[0], t.Fields[2]);\n        }\n        else {\n            if (c === 0) {\n                return t;\n            }\n            else {\n                return tree_rebalance(t.Fields[1], t.Fields[0], tree_add(comparer, k, t.Fields[2]));\n            }\n        }\n    })();\n}\nfunction tree_balance(comparer, t1, k, t2) {\n    var matchValue = [t1, t2];\n    var $target1 = function (t1_1) { return tree_add(comparer, k, t1_1); };\n    var $target2 = function (k1, t2_1) { return tree_add(comparer, k, tree_add(comparer, k1, t2_1)); };\n    if (matchValue[0].Case === \"SetOne\") {\n        if (matchValue[1].Case === \"SetEmpty\") {\n            return $target1(matchValue[0]);\n        }\n        else {\n            if (matchValue[1].Case === \"SetOne\") {\n                return $target2(matchValue[0].Fields[0], matchValue[1]);\n            }\n            else {\n                return $target2(matchValue[0].Fields[0], matchValue[1]);\n            }\n        }\n    }\n    else {\n        if (matchValue[0].Case === \"SetNode\") {\n            if (matchValue[1].Case === \"SetOne\") {\n                var k2 = matchValue[1].Fields[0];\n                var t1_1 = matchValue[0];\n                return tree_add(comparer, k, tree_add(comparer, k2, t1_1));\n            }\n            else {\n                if (matchValue[1].Case === \"SetNode\") {\n                    var h1 = matchValue[0].Fields[3];\n                    var h2 = matchValue[1].Fields[3];\n                    var k1 = matchValue[0].Fields[0];\n                    var k2 = matchValue[1].Fields[0];\n                    var t11 = matchValue[0].Fields[1];\n                    var t12 = matchValue[0].Fields[2];\n                    var t21 = matchValue[1].Fields[1];\n                    var t22 = matchValue[1].Fields[2];\n                    if (h1 + tree_tolerance < h2) {\n                        return tree_rebalance(tree_balance(comparer, t1, k, t21), k2, t22);\n                    }\n                    else {\n                        if (h2 + tree_tolerance < h1) {\n                            return tree_rebalance(t11, k1, tree_balance(comparer, t12, k, t2));\n                        }\n                        else {\n                            return tree_mk(t1, k, t2);\n                        }\n                    }\n                }\n                else {\n                    return $target1(matchValue[0]);\n                }\n            }\n        }\n        else {\n            var t2_1 = matchValue[1];\n            return tree_add(comparer, k, t2_1);\n        }\n    }\n}\nfunction tree_split(comparer, pivot, t) {\n    return t.Case === \"SetOne\" ? (function () {\n        var c = comparer.Compare(t.Fields[0], pivot);\n        if (c < 0) {\n            return [t, false, new SetTree(\"SetEmpty\", [])];\n        }\n        else {\n            if (c === 0) {\n                return [new SetTree(\"SetEmpty\", []), true, new SetTree(\"SetEmpty\", [])];\n            }\n            else {\n                return [new SetTree(\"SetEmpty\", []), false, t];\n            }\n        }\n    })() : t.Case === \"SetEmpty\" ? [new SetTree(\"SetEmpty\", []), false, new SetTree(\"SetEmpty\", [])] : (function () {\n        var c = comparer.Compare(pivot, t.Fields[0]);\n        if (c < 0) {\n            var patternInput = tree_split(comparer, pivot, t.Fields[1]);\n            var t11Lo = patternInput[0];\n            var t11Hi = patternInput[2];\n            var havePivot = patternInput[1];\n            return [t11Lo, havePivot, tree_balance(comparer, t11Hi, t.Fields[0], t.Fields[2])];\n        }\n        else {\n            if (c === 0) {\n                return [t.Fields[1], true, t.Fields[2]];\n            }\n            else {\n                var patternInput = tree_split(comparer, pivot, t.Fields[2]);\n                var t12Lo = patternInput[0];\n                var t12Hi = patternInput[2];\n                var havePivot = patternInput[1];\n                return [tree_balance(comparer, t.Fields[1], t.Fields[0], t12Lo), havePivot, t12Hi];\n            }\n        }\n    })();\n}\nfunction tree_spliceOutSuccessor(t) {\n    return t.Case === \"SetOne\" ? [t.Fields[0], new SetTree(\"SetEmpty\", [])] : t.Case === \"SetNode\" ? t.Fields[1].Case === \"SetEmpty\" ? [t.Fields[0], t.Fields[2]] : (function () {\n        var patternInput = tree_spliceOutSuccessor(t.Fields[1]);\n        var l_ = patternInput[1];\n        var k3 = patternInput[0];\n        return [k3, tree_mk(l_, t.Fields[0], t.Fields[2])];\n    })() : (function () {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n    })();\n}\nfunction tree_remove(comparer, k, t) {\n    return t.Case === \"SetOne\" ? (function () {\n        var c = comparer.Compare(k, t.Fields[0]);\n        if (c === 0) {\n            return new SetTree(\"SetEmpty\", []);\n        }\n        else {\n            return t;\n        }\n    })() : t.Case === \"SetNode\" ? (function () {\n        var c = comparer.Compare(k, t.Fields[0]);\n        if (c < 0) {\n            return tree_rebalance(tree_remove(comparer, k, t.Fields[1]), t.Fields[0], t.Fields[2]);\n        }\n        else {\n            if (c === 0) {\n                var matchValue = [t.Fields[1], t.Fields[2]];\n                if (matchValue[0].Case === \"SetEmpty\") {\n                    return t.Fields[2];\n                }\n                else {\n                    if (matchValue[1].Case === \"SetEmpty\") {\n                        return t.Fields[1];\n                    }\n                    else {\n                        var patternInput = tree_spliceOutSuccessor(t.Fields[2]);\n                        var sk = patternInput[0];\n                        var r_ = patternInput[1];\n                        return tree_mk(t.Fields[1], sk, r_);\n                    }\n                }\n            }\n            else {\n                return tree_rebalance(t.Fields[1], t.Fields[0], tree_remove(comparer, k, t.Fields[2]));\n            }\n        }\n    })() : t;\n}\nfunction tree_mem(comparer, k, t) {\n    return t.Case === \"SetOne\" ? comparer.Compare(k, t.Fields[0]) === 0 : t.Case === \"SetEmpty\" ? false : (function () {\n        var c = comparer.Compare(k, t.Fields[0]);\n        if (c < 0) {\n            return tree_mem(comparer, k, t.Fields[1]);\n        }\n        else {\n            if (c === 0) {\n                return true;\n            }\n            else {\n                return tree_mem(comparer, k, t.Fields[2]);\n            }\n        }\n    })();\n}\nfunction tree_iter(f, t) {\n    if (t.Case === \"SetOne\") {\n        f(t.Fields[0]);\n    }\n    else {\n        if (t.Case === \"SetEmpty\") { }\n        else {\n            tree_iter(f, t.Fields[1]);\n            f(t.Fields[0]);\n            tree_iter(f, t.Fields[2]);\n        }\n    }\n}\nfunction tree_foldBack(f, m, x) {\n    return m.Case === \"SetOne\" ? f(m.Fields[0], x) : m.Case === \"SetEmpty\" ? x : tree_foldBack(f, m.Fields[1], f(m.Fields[0], tree_foldBack(f, m.Fields[2], x)));\n}\nfunction tree_fold(f, x, m) {\n    return m.Case === \"SetOne\" ? f(x, m.Fields[0]) : m.Case === \"SetEmpty\" ? x : (function () {\n        var x_1 = tree_fold(f, x, m.Fields[1]);\n        var x_2 = f(x_1, m.Fields[0]);\n        return tree_fold(f, x_2, m.Fields[2]);\n    })();\n}\nfunction tree_forall(f, m) {\n    return m.Case === \"SetOne\" ? f(m.Fields[0]) : m.Case === \"SetEmpty\" ? true : (f(m.Fields[0]) ? tree_forall(f, m.Fields[1]) : false) ? tree_forall(f, m.Fields[2]) : false;\n}\nfunction tree_exists(f, m) {\n    return m.Case === \"SetOne\" ? f(m.Fields[0]) : m.Case === \"SetEmpty\" ? false : (f(m.Fields[0]) ? true : tree_exists(f, m.Fields[1])) ? true : tree_exists(f, m.Fields[2]);\n}\nfunction tree_isEmpty(m) {\n    return m.Case === \"SetEmpty\" ? true : false;\n}\nfunction tree_subset(comparer, a, b) {\n    return tree_forall(function (x) { return tree_mem(comparer, x, b); }, a);\n}\nfunction tree_psubset(comparer, a, b) {\n    return tree_forall(function (x) { return tree_mem(comparer, x, b); }, a) ? tree_exists(function (x) { return !tree_mem(comparer, x, a); }, b) : false;\n}\nfunction tree_filterAux(comparer, f, s, acc) {\n    return s.Case === \"SetOne\" ? f(s.Fields[0]) ? tree_add(comparer, s.Fields[0], acc) : acc : s.Case === \"SetEmpty\" ? acc : (function () {\n        var acc_1 = f(s.Fields[0]) ? tree_add(comparer, s.Fields[0], acc) : acc;\n        return tree_filterAux(comparer, f, s.Fields[1], tree_filterAux(comparer, f, s.Fields[2], acc_1));\n    })();\n}\nfunction tree_filter(comparer, f, s) {\n    return tree_filterAux(comparer, f, s, new SetTree(\"SetEmpty\", []));\n}\nfunction tree_diffAux(comparer, m, acc) {\n    return m.Case === \"SetOne\" ? tree_remove(comparer, m.Fields[0], acc) : m.Case === \"SetEmpty\" ? acc : tree_diffAux(comparer, m.Fields[1], tree_diffAux(comparer, m.Fields[2], tree_remove(comparer, m.Fields[0], acc)));\n}\nfunction tree_diff(comparer, a, b) {\n    return tree_diffAux(comparer, b, a);\n}\nfunction tree_union(comparer, t1, t2) {\n    var matchValue = [t1, t2];\n    var $target2 = function (t) { return t; };\n    var $target3 = function (k1, t2_1) { return tree_add(comparer, k1, t2_1); };\n    if (matchValue[0].Case === \"SetEmpty\") {\n        var t = matchValue[1];\n        return t;\n    }\n    else {\n        if (matchValue[0].Case === \"SetOne\") {\n            if (matchValue[1].Case === \"SetEmpty\") {\n                return $target2(matchValue[0]);\n            }\n            else {\n                if (matchValue[1].Case === \"SetOne\") {\n                    return $target3(matchValue[0].Fields[0], matchValue[1]);\n                }\n                else {\n                    return $target3(matchValue[0].Fields[0], matchValue[1]);\n                }\n            }\n        }\n        else {\n            if (matchValue[1].Case === \"SetEmpty\") {\n                return $target2(matchValue[0]);\n            }\n            else {\n                if (matchValue[1].Case === \"SetOne\") {\n                    var k2 = matchValue[1].Fields[0];\n                    var t1_1 = matchValue[0];\n                    return tree_add(comparer, k2, t1_1);\n                }\n                else {\n                    var h1 = matchValue[0].Fields[3];\n                    var h2 = matchValue[1].Fields[3];\n                    var k1 = matchValue[0].Fields[0];\n                    var k2 = matchValue[1].Fields[0];\n                    var t11 = matchValue[0].Fields[1];\n                    var t12 = matchValue[0].Fields[2];\n                    var t21 = matchValue[1].Fields[1];\n                    var t22 = matchValue[1].Fields[2];\n                    if (h1 > h2) {\n                        var patternInput = tree_split(comparer, k1, t2);\n                        var lo = patternInput[0];\n                        var hi = patternInput[2];\n                        return tree_balance(comparer, tree_union(comparer, t11, lo), k1, tree_union(comparer, t12, hi));\n                    }\n                    else {\n                        var patternInput = tree_split(comparer, k2, t1);\n                        var lo = patternInput[0];\n                        var hi = patternInput[2];\n                        return tree_balance(comparer, tree_union(comparer, t21, lo), k2, tree_union(comparer, t22, hi));\n                    }\n                }\n            }\n        }\n    }\n}\nfunction tree_intersectionAux(comparer, b, m, acc) {\n    return m.Case === \"SetOne\" ? tree_mem(comparer, m.Fields[0], b) ? tree_add(comparer, m.Fields[0], acc) : acc : m.Case === \"SetEmpty\" ? acc : (function () {\n        var acc_1 = tree_intersectionAux(comparer, b, m.Fields[2], acc);\n        var acc_2 = tree_mem(comparer, m.Fields[0], b) ? tree_add(comparer, m.Fields[0], acc_1) : acc_1;\n        return tree_intersectionAux(comparer, b, m.Fields[1], acc_2);\n    })();\n}\nfunction tree_intersection(comparer, a, b) {\n    return tree_intersectionAux(comparer, b, a, new SetTree(\"SetEmpty\", []));\n}\nfunction tree_partition1(comparer, f, k, acc1, acc2) {\n    return f(k) ? [tree_add(comparer, k, acc1), acc2] : [acc1, tree_add(comparer, k, acc2)];\n}\nfunction tree_partitionAux(comparer, f, s, acc_0, acc_1) {\n    var acc = [acc_0, acc_1];\n    if (s.Case === \"SetOne\") {\n        var acc1 = acc[0];\n        var acc2 = acc[1];\n        return tree_partition1(comparer, f, s.Fields[0], acc1, acc2);\n    }\n    else {\n        if (s.Case === \"SetEmpty\") {\n            return acc;\n        }\n        else {\n            var acc_2 = (function () {\n                var arg30_ = acc[0];\n                var arg31_ = acc[1];\n                return tree_partitionAux(comparer, f, s.Fields[2], arg30_, arg31_);\n            })();\n            var acc_3 = (function () {\n                var acc1 = acc_2[0];\n                var acc2 = acc_2[1];\n                return tree_partition1(comparer, f, s.Fields[0], acc1, acc2);\n            })();\n            var arg30_ = acc_3[0];\n            var arg31_ = acc_3[1];\n            return tree_partitionAux(comparer, f, s.Fields[1], arg30_, arg31_);\n        }\n    }\n}\nfunction tree_partition(comparer, f, s) {\n    var seed = [new SetTree(\"SetEmpty\", []), new SetTree(\"SetEmpty\", [])];\n    var arg30_ = seed[0];\n    var arg31_ = seed[1];\n    return tree_partitionAux(comparer, f, s, arg30_, arg31_);\n}\n// function tree_$MatchSetNode$MatchSetEmpty$(s: SetTree) {\n//   return s.Case === \"SetOne\" ? new Choice(\"Choice1Of2\", [[s.Fields[0], new SetTree(\"SetEmpty\", []), new SetTree(\"SetEmpty\", [])]]) : s.Case === \"SetEmpty\" ? new Choice(\"Choice2Of2\", [null]) : new Choice(\"Choice1Of2\", [[s.Fields[0], s.Fields[1], s.Fields[2]]]);\n// }\nfunction tree_minimumElementAux(s, n) {\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? n : tree_minimumElementAux(s.Fields[1], s.Fields[0]);\n}\nfunction tree_minimumElementOpt(s) {\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? null : tree_minimumElementAux(s.Fields[1], s.Fields[0]);\n}\nfunction tree_maximumElementAux(s, n) {\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? n : tree_maximumElementAux(s.Fields[2], s.Fields[0]);\n}\nfunction tree_maximumElementOpt(s) {\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? null : tree_maximumElementAux(s.Fields[2], s.Fields[0]);\n}\nfunction tree_minimumElement(s) {\n    var matchValue = tree_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw new Error(\"Set contains no elements\");\n    }\n    else {\n        return matchValue;\n    }\n}\nfunction tree_maximumElement(s) {\n    var matchValue = tree_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw new Error(\"Set contains no elements\");\n    }\n    else {\n        return matchValue;\n    }\n}\nfunction tree_collapseLHS(stack) {\n    return stack.tail != null\n        ? stack.head.Case === \"SetOne\"\n            ? stack\n            : stack.head.Case === \"SetNode\"\n                ? tree_collapseLHS(listOfArray([\n                    stack.head.Fields[1],\n                    tree_SetOne(stack.head.Fields[0]),\n                    stack.head.Fields[2]\n                ], stack.tail))\n                : tree_collapseLHS(stack.tail)\n        : new List();\n}\nfunction tree_mkIterator(s) {\n    return { stack: tree_collapseLHS(new List(s, new List())), started: false };\n}\n;\n// function tree_notStarted() {\n//   throw new Error(\"Enumeration not started\");\n// };\n// var alreadyFinished = $exports.alreadyFinished = function () {\n//   throw new Error(\"Enumeration already started\");\n// };\nfunction tree_moveNext(i) {\n    function current(i) {\n        if (i.stack.tail == null) {\n            return null;\n        }\n        else if (i.stack.head.Case === \"SetOne\") {\n            return i.stack.head.Fields[0];\n        }\n        throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n    if (i.started) {\n        if (i.stack.tail == null) {\n            return { done: true, value: null };\n        }\n        else {\n            if (i.stack.head.Case === \"SetOne\") {\n                i.stack = tree_collapseLHS(i.stack.tail);\n                return {\n                    done: i.stack.tail == null,\n                    value: current(i)\n                };\n            }\n            else {\n                throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n            }\n        }\n    }\n    else {\n        i.started = true;\n        return {\n            done: i.stack.tail == null,\n            value: current(i)\n        };\n    }\n    ;\n}\nfunction tree_compareStacks(comparer, l1, l2) {\n    var $target8 = function (n1k, t1) { return tree_compareStacks(comparer, listOfArray([new SetTree(\"SetEmpty\", []), tree_SetOne(n1k)], t1), l2); };\n    var $target9 = function (n1k, n1l, n1r, t1) { return tree_compareStacks(comparer, listOfArray([n1l, tree_SetNode(n1k, new SetTree(\"SetEmpty\", []), n1r, 0)], t1), l2); };\n    var $target11 = function (n2k, n2l, n2r, t2) { return tree_compareStacks(comparer, l1, listOfArray([n2l, tree_SetNode(n2k, new SetTree(\"SetEmpty\", []), n2r, 0)], t2)); };\n    if (l1.tail != null) {\n        if (l2.tail != null) {\n            if (l2.head.Case === \"SetOne\") {\n                if (l1.head.Case === \"SetOne\") {\n                    var n1k = l1.head.Fields[0], n2k = l2.head.Fields[0], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\n                    if (c !== 0) {\n                        return c;\n                    }\n                    else {\n                        return tree_compareStacks(comparer, t1, t2);\n                    }\n                }\n                else {\n                    if (l1.head.Case === \"SetNode\") {\n                        if (l1.head.Fields[1].Case === \"SetEmpty\") {\n                            var emp = l1.head.Fields[1], n1k = l1.head.Fields[0], n1r = l1.head.Fields[2], n2k = l2.head.Fields[0], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\n                            if (c !== 0) {\n                                return c;\n                            }\n                            else {\n                                return tree_compareStacks(comparer, listOfArray([n1r], t1), listOfArray([emp], t2));\n                            }\n                        }\n                        else {\n                            return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\n                        }\n                    }\n                    else {\n                        var n2k = l2.head.Fields[0], t2 = l2.tail;\n                        return tree_compareStacks(comparer, l1, listOfArray([new SetTree(\"SetEmpty\", []), tree_SetOne(n2k)], t2));\n                    }\n                }\n            }\n            else {\n                if (l2.head.Case === \"SetNode\") {\n                    if (l2.head.Fields[1].Case === \"SetEmpty\") {\n                        if (l1.head.Case === \"SetOne\") {\n                            var n1k = l1.head.Fields[0], n2k = l2.head.Fields[0], n2r = l2.head.Fields[2], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\n                            if (c !== 0) {\n                                return c;\n                            }\n                            else {\n                                return tree_compareStacks(comparer, listOfArray([new SetTree(\"SetEmpty\", [])], t1), listOfArray([n2r], t2));\n                            }\n                        }\n                        else {\n                            if (l1.head.Case === \"SetNode\") {\n                                if (l1.head.Fields[1].Case === \"SetEmpty\") {\n                                    var n1k = l1.head.Fields[0], n1r = l1.head.Fields[2], n2k = l2.head.Fields[0], n2r = l2.head.Fields[2], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\n                                    if (c !== 0) {\n                                        return c;\n                                    }\n                                    else {\n                                        return tree_compareStacks(comparer, listOfArray([n1r], t1), listOfArray([n2r], t2));\n                                    }\n                                }\n                                else {\n                                    return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\n                                }\n                            }\n                            else {\n                                return $target11(l2.head.Fields[0], l2.head.Fields[1], l2.head.Fields[2], l2.tail);\n                            }\n                        }\n                    }\n                    else {\n                        if (l1.head.Case === \"SetOne\") {\n                            return $target8(l1.head.Fields[0], l1.tail);\n                        }\n                        else {\n                            if (l1.head.Case === \"SetNode\") {\n                                return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\n                            }\n                            else {\n                                return $target11(l2.head.Fields[0], l2.head.Fields[1], l2.head.Fields[2], l2.tail);\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (l1.head.Case === \"SetOne\") {\n                        return $target8(l1.head.Fields[0], l1.tail);\n                    }\n                    else {\n                        if (l1.head.Case === \"SetNode\") {\n                            return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\n                        }\n                        else {\n                            return tree_compareStacks(comparer, l1.tail, l2.tail);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return 1;\n        }\n    }\n    else {\n        if (l2.tail != null) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction tree_compare(comparer, s1, s2) {\n    if (s1.Case === \"SetEmpty\") {\n        if (s2.Case === \"SetEmpty\") {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else {\n        if (s2.Case === \"SetEmpty\") {\n            return 1;\n        }\n        else {\n            return tree_compareStacks(comparer, listOfArray([s1]), listOfArray([s2]));\n        }\n    }\n}\nfunction tree_mkFromEnumerator(comparer, acc, e) {\n    var cur = e.next();\n    while (!cur.done) {\n        acc = tree_add(comparer, cur.value, acc);\n        cur = e.next();\n    }\n    return acc;\n}\nfunction tree_ofSeq(comparer, c) {\n    var ie = c[Symbol.iterator]();\n    return tree_mkFromEnumerator(comparer, new SetTree(\"SetEmpty\", []), ie);\n}\nvar FSet = (function () {\n    /** Do not call, use Set.create instead. */\n    function FSet() {\n    }\n    FSet.prototype.ToString = function () {\n        return \"set [\" + Array.from(this).map(toString).join(\"; \") + \"]\";\n    };\n    FSet.prototype.Equals = function (s2) {\n        return this.CompareTo(s2) === 0;\n    };\n    FSet.prototype.CompareTo = function (s2) {\n        return this === s2 ? 0 : tree_compare(this.comparer, this.tree, s2.tree);\n    };\n    FSet.prototype[Symbol.iterator] = function () {\n        var i = tree_mkIterator(this.tree);\n        return {\n            next: function () { return tree_moveNext(i); }\n        };\n    };\n    FSet.prototype.values = function () {\n        return this[Symbol.iterator]();\n    };\n    FSet.prototype.has = function (v) {\n        return tree_mem(this.comparer, v, this.tree);\n    };\n    /** Not supported */\n    FSet.prototype.add = function (v) {\n        throw new Error(\"not supported\");\n    };\n    /** Not supported */\n    FSet.prototype.delete = function (v) {\n        throw new Error(\"not supported\");\n    };\n    /** Not supported */\n    FSet.prototype.clear = function () {\n        throw new Error(\"not supported\");\n    };\n    Object.defineProperty(FSet.prototype, \"size\", {\n        get: function () {\n            return tree_count(this.tree);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FSet.prototype[FSymbol.reflection] = function () {\n        return {\n            type: \"Microsoft.FSharp.Collections.FSharpSet\",\n            interfaces: [\"System.IEquatable\", \"System.IComparable\"]\n        };\n    };\n    return FSet;\n}());\nexport default FSet;\nfunction from(comparer, tree) {\n    var s = new FSet();\n    s.tree = tree;\n    s.comparer = comparer || new GenericComparer();\n    return s;\n}\nexport function create(ie, comparer) {\n    comparer = comparer || new GenericComparer();\n    return from(comparer, ie ? tree_ofSeq(comparer, ie) : new SetTree(\"SetEmpty\", []));\n}\nexport function isEmpty(s) {\n    return tree_isEmpty(s.tree);\n}\nexport function add(item, s) {\n    return from(s.comparer, tree_add(s.comparer, item, s.tree));\n}\nexport function addInPlace(item, s) {\n    return s.has(item) ? false : (s.add(item), true);\n}\nexport function remove(item, s) {\n    return from(s.comparer, tree_remove(s.comparer, item, s.tree));\n}\nexport function union(set1, set2) {\n    return set2.tree.Case === \"SetEmpty\"\n        ? set1\n        : set1.tree.Case === \"SetEmpty\"\n            ? set2\n            : from(set1.comparer, tree_union(set1.comparer, set1.tree, set2.tree));\n}\nexport function op_Addition(set1, set2) {\n    return union(set1, set2);\n}\nexport function unionInPlace(set1, set2) {\n    seqIterate(function (x) { set1.add(x); }, set2);\n}\nexport function unionMany(sets) {\n    // Pass args as union(s, acc) instead of union(acc, s)\n    // to discard the comparer of the first empty set\n    return seqFold(function (acc, s) { return union(s, acc); }, create(), sets);\n}\nexport function difference(set1, set2) {\n    return set1.tree.Case === \"SetEmpty\"\n        ? set1\n        : set2.tree.Case === \"SetEmpty\"\n            ? set1\n            : from(set1.comparer, tree_diff(set1.comparer, set1.tree, set2.tree));\n}\nexport function op_Subtraction(set1, set2) {\n    return difference(set1, set2);\n}\nexport function differenceInPlace(set1, set2) {\n    seqIterate(function (x) { set1.delete(x); }, set2);\n}\nexport function intersect(set1, set2) {\n    return set2.tree.Case === \"SetEmpty\"\n        ? set2\n        : set1.tree.Case === \"SetEmpty\"\n            ? set1\n            : from(set1.comparer, tree_intersection(set1.comparer, set1.tree, set2.tree));\n}\nexport function intersectInPlace(set1, set2) {\n    var set2_ = set2 instanceof Set ? set2 : new Set(set2);\n    seqIterate(function (x) { if (!set2_.has(x)) {\n        set1.delete(x);\n    } }, set1);\n}\nexport function intersectMany(sets) {\n    return seqReduce(function (s1, s2) { return intersect(s1, s2); }, sets);\n}\nexport function isProperSubsetOf(set1, set2) {\n    if (set1 instanceof FSet && set2 instanceof FSet) {\n        return tree_psubset(set1.comparer, set1.tree, set2.tree);\n    }\n    else {\n        set2 = set2 instanceof Set ? set2 : new Set(set2);\n        return seqForAll(function (x) { return set2.has(x); }, set1) && seqExists(function (x) { return !set1.has(x); }, set2);\n    }\n}\nexport function isProperSubset(set1, set2) {\n    return isProperSubsetOf(set1, set2);\n}\nexport function isSubsetOf(set1, set2) {\n    if (set1 instanceof FSet && set2 instanceof FSet) {\n        return tree_subset(set1.comparer, set1.tree, set2.tree);\n    }\n    else {\n        set2 = set2 instanceof Set ? set2 : new Set(set2);\n        return seqForAll(function (x) { return set2.has(x); }, set1);\n    }\n}\nexport function isSubset(set1, set2) {\n    return isSubsetOf(set1, set2);\n}\nexport function isProperSupersetOf(set1, set2) {\n    if (set1 instanceof FSet && set2 instanceof FSet) {\n        return tree_psubset(set1.comparer, set2.tree, set1.tree);\n    }\n    else {\n        return isProperSubset(set2 instanceof Set ? set2 : new Set(set2), set1);\n    }\n}\nexport function isProperSuperset(set1, set2) {\n    return isProperSupersetOf(set1, set2);\n}\nexport function isSupersetOf(set1, set2) {\n    if (set1 instanceof FSet && set2 instanceof FSet) {\n        return tree_subset(set1.comparer, set2.tree, set1.tree);\n    }\n    else {\n        return isSubset(set2 instanceof Set ? set2 : new Set(set2), set1);\n    }\n}\nexport function isSuperset(set1, set2) {\n    return isSupersetOf(set1, set2);\n}\nexport function copyTo(xs, arr, arrayIndex, count) {\n    if (!Array.isArray(arr) && !ArrayBuffer.isView(arr))\n        throw new Error(\"Array is invalid\");\n    count = count || arr.length;\n    var i = arrayIndex || 0;\n    var iter = xs[Symbol.iterator]();\n    while (count--) {\n        var el = iter.next();\n        if (el.done)\n            break;\n        arr[i++] = el.value;\n    }\n}\nexport function partition(f, s) {\n    if (s.tree.Case === \"SetEmpty\") {\n        return [s, s];\n    }\n    else {\n        var tuple = tree_partition(s.comparer, f, s.tree);\n        return [from(s.comparer, tuple[0]), from(s.comparer, tuple[1])];\n    }\n}\nexport function filter(f, s) {\n    if (s.tree.Case === \"SetEmpty\") {\n        return s;\n    }\n    else {\n        return from(s.comparer, tree_filter(s.comparer, f, s.tree));\n    }\n}\nexport function map(f, s) {\n    var comparer = new GenericComparer();\n    return from(comparer, tree_fold(function (acc, k) { return tree_add(comparer, f(k), acc); }, new SetTree(\"SetEmpty\", []), s.tree));\n}\nexport function exists(f, s) {\n    return tree_exists(f, s.tree);\n}\nexport function forAll(f, s) {\n    return tree_forall(f, s.tree);\n}\nexport function fold(f, seed, s) {\n    return tree_fold(f, seed, s.tree);\n}\nexport function foldBack(f, s, seed) {\n    return tree_foldBack(f, s.tree, seed);\n}\nexport function iterate(f, s) {\n    tree_iter(f, s.tree);\n}\nexport function minimumElement(s) {\n    return tree_minimumElement(s.tree);\n}\nexport function minElement(s) {\n    return tree_minimumElement(s.tree);\n}\nexport function maximumElement(s) {\n    return tree_maximumElement(s.tree);\n}\nexport function maxElement(s) {\n    return tree_maximumElement(s.tree);\n}\n","﻿module App.Common\n\n//\n// Types of Tokens and expressions\n//\ntype Token = \n    | TokName of string // all symbols and operators.\n    | TokStrLit of string // string literal \"Hello world\"\n    | TokIntLit of int // integer literal 1234 (only allow positive literals but unary - can be used to make them negative)\n    | TokNull // representation of a Null value used for empty lists: a :: b :: c :: Null (like [] in F#)\n\ntype Exp = \n    | Apply of Exp list // Apply[f;a;b;c] -> f a b c\n    | Name of string // Built-in Combinator or let-defined function name\n    | Literal of Token // \n    | NullExp\n    | FNames of Exp list // list of symbols found in LET definition: function + arg names\n    | Lambda of Func : Exp * Args: Exp list * Body : Exp * InExp : Exp // Let definition and associated expression\n\n//\n// Basic operations using the above data\n//\n\n/// end of parse recursive constructs\nlet endOps = [ \"END\"; \"THEN\"; \"ELSE\"; \"FI\"; \")\" ; \"IN\"] \n\n/// start of recursive constructs\nlet startOps = [ \"BEGIN\"; \"(\"; \"IF\" ; \"LET\"] // keywords that can possibly start a recursive parse\n\n/// prefix unary operators (may also be binary in LeftD context)\nlet unaryOps = [ \"ISPAIR\" ; \"NOT\" ; \"-\" ] // prefix unary operators\n\n/// // this list defines which operators are binary and establishes operator precedence (binding)\nlet binaryOpPriority = \n    Map.ofList [ \"+\", 40\n                 \"-\", 40\n                 \"*\", 50\n                 \"/\", 50\n                 \"%\", 50\n                 \">\", 30\n                 \"<\", 30\n                 \"=\", 20\n                 \"::\", 10 ]\n/// strings used for binary 0perators\nlet binaryOps = \n    binaryOpPriority\n    |> Map.toList\n    |> List.map fst\n\n/// any token string with a special meaning\nlet allOps = (binaryOps @ unaryOps @ endOps @ startOps) |> Seq.ofList |> Seq.distinct |> List.ofSeq\n\n// Useful predicates on characters\n\n/// character is white sppace\nlet isWhiteSpace (c : char) = List.contains c [ ' '; '\\n'; '\\t'; '\\r'; '\\f' ]\n\n/// charater is new line\nlet isNewLine (c : char) = List.contains c [ '\\n'; '\\f'; '\\r' ]\n\n/// character is alphabetic\nlet isAlpha (c : char) = List.contains c ([ 'a'..'z' ] @ [ 'A'..'Z' ])\n\n/// character is a decimal digit\nlet isDigit (c : char) = List.contains c [ '0'..'9' ]\n\n/// character is alphanumeic (allowed in symbol)\nlet isAlphaNum (c : char) = isAlpha c || isDigit c\n\n/// character op is in list lst\nlet isOpInList (op: char) lst = List.contains op lst\n\n","export function create(pattern, options) {\n    var flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\";\n    flags += options & 2 ? \"m\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options) {\n    if (options === void 0) { options = 0; }\n    var reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options) {\n    if (options === void 0) { options = 0; }\n    var reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options) {\n    if (options === void 0) { options = 0; }\n    var reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global)\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    var m;\n    var matches = [];\n    while ((m = reg.exec(str)) !== null)\n        matches.push(m);\n    return matches;\n}\nexport function options(reg) {\n    var options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset) {\n    if (offset === void 0) { offset = 0; }\n    function replacer() {\n        var res = arguments[0];\n        if (limit !== 0) {\n            limit--;\n            var match_1 = [];\n            var len = arguments.length;\n            for (var i = 0; i < len - 2; i++)\n                match_1.push(arguments[i]);\n            match_1.index = arguments[len - 2];\n            match_1.input = arguments[len - 1];\n            res = replacement(match_1);\n        }\n        return res;\n    }\n    if (typeof reg == \"string\") {\n        var tmp = reg;\n        reg = create(input, limit);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement == \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        if (limit != null) {\n            var m = void 0;\n            var sub1 = input.substring(offset);\n            var _matches = matches(reg, sub1);\n            var sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement) + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset) {\n    if (offset === void 0) { offset = 0; }\n    if (typeof reg == \"string\") {\n        var tmp = reg;\n        reg = create(input, limit);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","// Source: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * @class A Long class for representing a 64 bit two's-complement integer value.\n */\nvar Long = (function () {\n    /**\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n     *  See the from* functions below for more convenient ways of constructing Longs.\n     * @param {number} low The low (signed) 32 bits of the long\n     * @param {number} high The high (signed) 32 bits of the long\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\n     */\n    function Long(low, high, unsigned) {\n        /**\n         * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n         * @param {!Long|number|string} other Other value\n         * @returns {boolean}\n         */\n        this.eq = this.equals;\n        /**\n         * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n         * @param {!Long|number|string} other Other value\n         * @returns {boolean}\n         */\n        this.neq = this.notEquals;\n        /**\n         * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n         * @param {!Long|number|string} other Other value\n         * @returns {boolean}\n         */\n        this.lt = this.lessThan;\n        /**\n         * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n         * @param {!Long|number|string} other Other value\n         * @returns {boolean}\n         */\n        this.lte = this.lessThanOrEqual;\n        /**\n         * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n         * @param {!Long|number|string} other Other value\n         * @returns {boolean}\n         */\n        this.gt = this.greaterThan;\n        /**\n         * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n         * @param {!Long|number|string} other Other value\n         * @returns {boolean}\n         */\n        this.gte = this.greaterThanOrEqual;\n        /**\n         * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n         * @param {!Long|number|string} other Other value\n         * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n         *  if the given one is greater\n         */\n        this.comp = this.compare;\n        /**\n         * Negates this Long's value. This is an alias of {@link Long#negate}.\n         * @returns {!Long} Negated Long\n         */\n        this.neg = this.negate;\n        /**\n         * Returns this Long's absolute value. This is an alias of {@link Long#absolute}.\n         * @returns {!Long} Absolute Long\n         */\n        this.abs = this.absolute;\n        /**\n         * Returns the difference of this and the specified  This is an alias of {@link Long#subtract}.\n         * @param {!Long|number|string} subtrahend Subtrahend\n         * @returns {!Long} Difference\n         */\n        this.sub = this.subtract;\n        /**\n         * Returns the product of this and the specified  This is an alias of {@link Long#multiply}.\n         * @param {!Long|number|string} multiplier Multiplier\n         * @returns {!Long} Product\n         */\n        this.mul = this.multiply;\n        /**\n         * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n         * @param {!Long|number|string} divisor Divisor\n         * @returns {!Long} Quotient\n         */\n        this.div = this.divide;\n        /**\n         * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n         * @param {!Long|number|string} divisor Divisor\n         * @returns {!Long} Remainder\n         */\n        this.mod = this.modulo;\n        /**\n         * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n         * @param {number|!Long} numBits Number of bits\n         * @returns {!Long} Shifted Long\n         */\n        this.shl = this.shiftLeft;\n        /**\n         * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n         * @param {number|!Long} numBits Number of bits\n         * @returns {!Long} Shifted Long\n         */\n        this.shr = this.shiftRight;\n        /**\n         * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n         * @param {number|!Long} numBits Number of bits\n         * @returns {!Long} Shifted Long\n         */\n        this.shru = this.shiftRightUnsigned;\n        // Aliases for compatibility with Fable\n        this.Equals = this.equals;\n        this.CompareTo = this.compare;\n        this.low = low | 0;\n        this.high = high | 0;\n        this.unsigned = !!unsigned;\n    }\n    /**\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n     * @returns {number}\n     */\n    Long.prototype.toInt = function () {\n        return this.unsigned ? this.low >>> 0 : this.low;\n    };\n    /**\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n     * @returns {number}\n     */\n    Long.prototype.toNumber = function () {\n        if (this.unsigned)\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    };\n    /**\n     * Converts the Long to a string written in the specified radix.\n     * @param {number=} radix Radix (2-36), defaults to 10\n     * @returns {string}\n     * @override\n     * @throws {RangeError} If `radix` is out of range\n     */\n    Long.prototype.toString = function (radix) {\n        if (radix === void 0) { radix = 10; }\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw RangeError('radix');\n        if (this.isZero())\n            return '0';\n        if (this.isNegative()) {\n            if (this.eq(MIN_VALUE)) {\n                // We need to change the Long value before it can be negated, so we remove\n                // the bottom-most digit in this base and then recurse to do the rest.\n                var radixLong = fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\n                return div.toString(radix) + rem1.toInt().toString(radix);\n            }\n            else\n                return '-' + this.neg().toString(radix);\n        }\n        // Do several (6) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned), rem = this;\n        var result = '';\n        while (true) {\n            var remDiv = rem.div(radixToPower), intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0, digits = intval.toString(radix);\n            rem = remDiv;\n            if (rem.isZero())\n                return digits + result;\n            else {\n                while (digits.length < 6)\n                    digits = '0' + digits;\n                result = '' + digits + result;\n            }\n        }\n    };\n    /**\n     * Gets the high 32 bits as a signed integer.\n     * @returns {number} Signed high bits\n     */\n    Long.prototype.getHighBits = function () {\n        return this.high;\n    };\n    /**\n     * Gets the high 32 bits as an unsigned integer.\n     * @returns {number} Unsigned high bits\n     */\n    Long.prototype.getHighBitsUnsigned = function () {\n        return this.high >>> 0;\n    };\n    /**\n     * Gets the low 32 bits as a signed integer.\n     * @returns {number} Signed low bits\n     */\n    Long.prototype.getLowBits = function () {\n        return this.low;\n    };\n    /**\n     * Gets the low 32 bits as an unsigned integer.\n     * @returns {number} Unsigned low bits\n     */\n    Long.prototype.getLowBitsUnsigned = function () {\n        return this.low >>> 0;\n    };\n    /**\n     * Gets the number of bits needed to represent the absolute value of this\n     * @returns {number}\n     */\n    Long.prototype.getNumBitsAbs = function () {\n        if (this.isNegative())\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n        var val = this.high != 0 ? this.high : this.low;\n        for (var bit = 31; bit > 0; bit--)\n            if ((val & (1 << bit)) != 0)\n                break;\n        return this.high != 0 ? bit + 33 : bit + 1;\n    };\n    /**\n     * Tests if this Long's value equals zero.\n     * @returns {boolean}\n     */\n    Long.prototype.isZero = function () {\n        return this.high === 0 && this.low === 0;\n    };\n    /**\n     * Tests if this Long's value is negative.\n     * @returns {boolean}\n     */\n    Long.prototype.isNegative = function () {\n        return !this.unsigned && this.high < 0;\n    };\n    /**\n     * Tests if this Long's value is positive.\n     * @returns {boolean}\n     */\n    Long.prototype.isPositive = function () {\n        return this.unsigned || this.high >= 0;\n    };\n    /**\n     * Tests if this Long's value is odd.\n     * @returns {boolean}\n     */\n    Long.prototype.isOdd = function () {\n        return (this.low & 1) === 1;\n    };\n    /**\n     * Tests if this Long's value is even.\n     * @returns {boolean}\n     */\n    Long.prototype.isEven = function () {\n        return (this.low & 1) === 0;\n    };\n    /**\n     * Tests if this Long's value equals the specified's.\n     * @param {!Long|number|string} other Other value\n     * @returns {boolean}\n     */\n    Long.prototype.equals = function (other) {\n        if (!isLong(other))\n            other = fromValue(other);\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n            return false;\n        return this.high === other.high && this.low === other.low;\n    };\n    /**\n     * Tests if this Long's value differs from the specified's.\n     * @param {!Long|number|string} other Other value\n     * @returns {boolean}\n     */\n    Long.prototype.notEquals = function (other) {\n        return !this.eq(/* validates */ other);\n    };\n    /**\n     * Tests if this Long's value is less than the specified's.\n     * @param {!Long|number|string} other Other value\n     * @returns {boolean}\n     */\n    Long.prototype.lessThan = function (other) {\n        return this.comp(/* validates */ other) < 0;\n    };\n    /**\n     * Tests if this Long's value is less than or equal the specified's.\n     * @param {!Long|number|string} other Other value\n     * @returns {boolean}\n     */\n    Long.prototype.lessThanOrEqual = function (other) {\n        return this.comp(/* validates */ other) <= 0;\n    };\n    /**\n     * Tests if this Long's value is greater than the specified's.\n     * @param {!Long|number|string} other Other value\n     * @returns {boolean}\n     */\n    Long.prototype.greaterThan = function (other) {\n        return this.comp(/* validates */ other) > 0;\n    };\n    /**\n     * Tests if this Long's value is greater than or equal the specified's.\n     * @param {!Long|number|string} other Other value\n     * @returns {boolean}\n     */\n    Long.prototype.greaterThanOrEqual = function (other) {\n        return this.comp(/* validates */ other) >= 0;\n    };\n    /**\n     * Compares this Long's value with the specified's.\n     * @param {!Long|number|string} other Other value\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n     *  if the given one is greater\n     */\n    Long.prototype.compare = function (other) {\n        if (!isLong(other))\n            other = fromValue(other);\n        if (this.eq(other))\n            return 0;\n        var thisNeg = this.isNegative(), otherNeg = other.isNegative();\n        if (thisNeg && !otherNeg)\n            return -1;\n        if (!thisNeg && otherNeg)\n            return 1;\n        // At this point the sign bits are the same\n        if (!this.unsigned)\n            return this.sub(other).isNegative() ? -1 : 1;\n        // Both are positive if at least one is unsigned\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\n    };\n    /**\n     * Negates this Long's value.\n     * @returns {!Long} Negated Long\n     */\n    Long.prototype.negate = function () {\n        if (!this.unsigned && this.eq(MIN_VALUE))\n            return MIN_VALUE;\n        return this.not().add(ONE);\n    };\n    /**\n     * Returns this Long's absolute value.\n     * @returns {!Long} Absolute Long\n     */\n    Long.prototype.absolute = function () {\n        if (!this.unsigned && this.isNegative())\n            return this.negate();\n        else\n            return this;\n    };\n    /**\n     * Returns the sum of this and the specified\n     * @param {!Long|number|string} addend Addend\n     * @returns {!Long} Sum\n     */\n    Long.prototype.add = function (addend) {\n        if (!isLong(addend))\n            addend = fromValue(addend);\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n        var a48 = this.high >>> 16;\n        var a32 = this.high & 0xFFFF;\n        var a16 = this.low >>> 16;\n        var a00 = this.low & 0xFFFF;\n        var b48 = addend.high >>> 16;\n        var b32 = addend.high & 0xFFFF;\n        var b16 = addend.low >>> 16;\n        var b00 = addend.low & 0xFFFF;\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xFFFF;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xFFFF;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c48 += a48 + b48;\n        c48 &= 0xFFFF;\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    };\n    /**\n     * Returns the difference of this and the specified\n     * @param {!Long|number|string} subtrahend Subtrahend\n     * @returns {!Long} Difference\n     */\n    Long.prototype.subtract = function (subtrahend) {\n        if (!isLong(subtrahend))\n            subtrahend = fromValue(subtrahend);\n        return this.add(subtrahend.neg());\n    };\n    /**\n     * Returns the product of this and the specified\n     * @param {!Long|number|string} multiplier Multiplier\n     * @returns {!Long} Product\n     */\n    Long.prototype.multiply = function (multiplier) {\n        if (this.isZero())\n            return ZERO;\n        if (!isLong(multiplier))\n            multiplier = fromValue(multiplier);\n        if (multiplier.isZero())\n            return ZERO;\n        if (this.eq(MIN_VALUE))\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\n        if (multiplier.eq(MIN_VALUE))\n            return this.isOdd() ? MIN_VALUE : ZERO;\n        if (this.isNegative()) {\n            if (multiplier.isNegative())\n                return this.neg().mul(multiplier.neg());\n            else\n                return this.neg().mul(multiplier).neg();\n        }\n        else if (multiplier.isNegative())\n            return this.mul(multiplier.neg()).neg();\n        // If both longs are small, use float multiplication\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n        // We can skip products that would overflow.\n        var a48 = this.high >>> 16;\n        var a32 = this.high & 0xFFFF;\n        var a16 = this.low >>> 16;\n        var a00 = this.low & 0xFFFF;\n        var b48 = multiplier.high >>> 16;\n        var b32 = multiplier.high & 0xFFFF;\n        var b16 = multiplier.low >>> 16;\n        var b00 = multiplier.low & 0xFFFF;\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 * b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xFFFF;\n        c16 += a16 * b00;\n        c32 += c16 >>> 16;\n        c16 &= 0xFFFF;\n        c16 += a00 * b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xFFFF;\n        c32 += a32 * b00;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c32 += a16 * b16;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c32 += a00 * b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n        c48 &= 0xFFFF;\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    };\n    /**\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\n     *  unsigned if this Long is unsigned.\n     * @param {!Long|number|string} divisor Divisor\n     * @returns {!Long} Quotient\n     */\n    Long.prototype.divide = function (divisor) {\n        if (!isLong(divisor))\n            divisor = fromValue(divisor);\n        if (divisor.isZero())\n            throw Error('division by zero');\n        if (this.isZero())\n            return this.unsigned ? UZERO : ZERO;\n        var approx = 0, rem = ZERO, res = ZERO;\n        if (!this.unsigned) {\n            // This section is only relevant for signed longs and is derived from the\n            // closure library as a whole.\n            if (this.eq(MIN_VALUE)) {\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\n                    return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n                else if (divisor.eq(MIN_VALUE))\n                    return ONE;\n                else {\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                    var halfThis = this.shr(1);\n                    var approx_1 = halfThis.div(divisor).shl(1);\n                    if (approx_1.eq(ZERO)) {\n                        return divisor.isNegative() ? ONE : NEG_ONE;\n                    }\n                    else {\n                        rem = this.sub(divisor.mul(approx_1));\n                        res = approx_1.add(rem.div(divisor));\n                        return res;\n                    }\n                }\n            }\n            else if (divisor.eq(MIN_VALUE))\n                return this.unsigned ? UZERO : ZERO;\n            if (this.isNegative()) {\n                if (divisor.isNegative())\n                    return this.neg().div(divisor.neg());\n                return this.neg().div(divisor).neg();\n            }\n            else if (divisor.isNegative())\n                return this.div(divisor.neg()).neg();\n            res = ZERO;\n        }\n        else {\n            // The algorithm below has not been made for unsigned longs. It's therefore\n            // required to take special care of the MSB prior to running it.\n            if (!divisor.unsigned)\n                divisor = divisor.toUnsigned();\n            if (divisor.gt(this))\n                return UZERO;\n            if (divisor.gt(this.shru(1)))\n                return UONE;\n            res = UZERO;\n        }\n        // Repeat the following until the remainder is less than other:  find a\n        // floating-point that approximates remainder / other *from below*, add this\n        // into the result, and subtract it from the remainder.  It is critical that\n        // the approximate value is less than or equal to the real value so that the\n        // remainder never becomes negative.\n        rem = this;\n        while (rem.gte(divisor)) {\n            // Approximate the result of division. This may be a little greater or\n            // smaller than the actual value.\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n            // We will tweak the approximate result by changing it in the 48-th digit or\n            // the smallest non-fractional digit, whichever is larger.\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n            // Decrease the approximation until it is smaller than the remainder.  Note\n            // that if it is too large, the product overflows and is negative.\n            approxRes = fromNumber(approx), approxRem = approxRes.mul(divisor);\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\n                approx -= delta;\n                approxRes = fromNumber(approx, this.unsigned);\n                approxRem = approxRes.mul(divisor);\n            }\n            // We know the answer can't be zero... and actually, zero would cause\n            // infinite recursion since we would make no progress.\n            if (approxRes.isZero())\n                approxRes = ONE;\n            res = res.add(approxRes);\n            rem = rem.sub(approxRem);\n        }\n        return res;\n    };\n    /**\n     * Returns this Long modulo the specified.\n     * @param {!Long|number|string} divisor Divisor\n     * @returns {!Long} Remainder\n     */\n    Long.prototype.modulo = function (divisor) {\n        if (!isLong(divisor))\n            divisor = fromValue(divisor);\n        return this.sub(this.div(divisor).mul(divisor));\n    };\n    ;\n    /**\n     * Returns the bitwise NOT of this\n     * @returns {!Long}\n     */\n    Long.prototype.not = function () {\n        return fromBits(~this.low, ~this.high, this.unsigned);\n    };\n    ;\n    /**\n     * Returns the bitwise AND of this Long and the specified.\n     * @param {!Long|number|string} other Other Long\n     * @returns {!Long}\n     */\n    Long.prototype.and = function (other) {\n        if (!isLong(other))\n            other = fromValue(other);\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    };\n    /**\n     * Returns the bitwise OR of this Long and the specified.\n     * @param {!Long|number|string} other Other Long\n     * @returns {!Long}\n     */\n    Long.prototype.or = function (other) {\n        if (!isLong(other))\n            other = fromValue(other);\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    };\n    /**\n     * Returns the bitwise XOR of this Long and the given one.\n     * @param {!Long|number|string} other Other Long\n     * @returns {!Long}\n     */\n    Long.prototype.xor = function (other) {\n        if (!isLong(other))\n            other = fromValue(other);\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    };\n    /**\n     * Returns this Long with bits shifted to the left by the given amount.\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    Long.prototype.shiftLeft = function (numBits) {\n        if (isLong(numBits))\n            numBits = numBits.toInt();\n        numBits = numBits & 63;\n        if (numBits === 0)\n            return this;\n        else if (numBits < 32)\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n        else\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\n    };\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    Long.prototype.shiftRight = function (numBits) {\n        if (isLong(numBits))\n            numBits = numBits.toInt();\n        numBits = numBits & 63;\n        if (numBits === 0)\n            return this;\n        else if (numBits < 32)\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n        else\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n    };\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount.\n     * @param {number|!Long} numBits Number of bits\n     * @returns {!Long} Shifted Long\n     */\n    Long.prototype.shiftRightUnsigned = function (numBits) {\n        if (isLong(numBits))\n            numBits = numBits.toInt();\n        numBits = numBits & 63;\n        if (numBits === 0)\n            return this;\n        else {\n            var high = this.high;\n            if (numBits < 32) {\n                var low = this.low;\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\n            }\n            else if (numBits === 32)\n                return fromBits(high, 0, this.unsigned);\n            else\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\n        }\n    };\n    /**\n     * Converts this Long to signed.\n     * @returns {!Long} Signed long\n     */\n    Long.prototype.toSigned = function () {\n        if (!this.unsigned)\n            return this;\n        return fromBits(this.low, this.high, false);\n    };\n    /**\n     * Converts this Long to unsigned.\n     * @returns {!Long} Unsigned long\n     */\n    Long.prototype.toUnsigned = function () {\n        if (this.unsigned)\n            return this;\n        return fromBits(this.low, this.high, true);\n    };\n    /**\n     * Converts this Long to its byte representation.\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\n     * @returns {!Array.<number>} Byte representation\n     */\n    Long.prototype.toBytes = function (le) {\n        return le ? this.toBytesLE() : this.toBytesBE();\n    };\n    /**\n     * Converts this Long to its little endian byte representation.\n     * @returns {!Array.<number>} Little endian byte representation\n     */\n    Long.prototype.toBytesLE = function () {\n        var hi = this.high, lo = this.low;\n        return [\n            lo & 0xff,\n            (lo >>> 8) & 0xff,\n            (lo >>> 16) & 0xff,\n            (lo >>> 24) & 0xff,\n            hi & 0xff,\n            (hi >>> 8) & 0xff,\n            (hi >>> 16) & 0xff,\n            (hi >>> 24) & 0xff\n        ];\n    };\n    /**\n     * Converts this Long to its big endian byte representation.\n     * @returns {!Array.<number>} Big endian byte representation\n     */\n    Long.prototype.toBytesBE = function () {\n        var hi = this.high, lo = this.low;\n        return [\n            (hi >>> 24) & 0xff,\n            (hi >>> 16) & 0xff,\n            (hi >>> 8) & 0xff,\n            hi & 0xff,\n            (lo >>> 24) & 0xff,\n            (lo >>> 16) & 0xff,\n            (lo >>> 8) & 0xff,\n            lo & 0xff\n        ];\n    };\n    return Long;\n}());\nexport { Long };\n// A cache of the Long representations of small integer values.\nvar INT_CACHE = {};\n// A cache of the Long representations of small unsigned integer values.\nvar UINT_CACHE = {};\n/**\n * Tests if the specified object is a\n * @param {*} obj Object\n * @returns {boolean}\n */\nexport function isLong(obj) {\n    return (obj && obj instanceof Long);\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\n * @returns {!Long} The corresponding Long value\n */\nexport function fromInt(value, unsigned) {\n    if (unsigned === void 0) { unsigned = false; }\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\n * @returns {!Long} The corresponding Long value\n */\nexport function fromNumber(value, unsigned) {\n    if (unsigned === void 0) { unsigned = false; }\n    if (isNaN(value) || !isFinite(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return fromNumber(-value, unsigned).neg();\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\n * @returns {!Long} The corresponding Long value\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Used 4 times (4*8 to 15+4)\nexport function fromString(str, unsigned, radix) {\n    if (unsigned === void 0) { unsigned = false; }\n    if (radix === void 0) { radix = 10; }\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return fromString(str.substring(1), unsigned, radix).neg();\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = result.mul(power).add(fromNumber(value));\n        }\n        else {\n            result = result.mul(radixToPower);\n            result = result.add(fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Converts the specified value to a\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @returns {!Long}\n */\nexport function fromValue(val) {\n    if (val /* is compatible */ instanceof Long)\n        return val;\n    if (typeof val === 'number')\n        return fromNumber(val);\n    if (typeof val === 'string')\n        return fromString(val);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, val.unsigned);\n}\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\nvar TWO_PWR_16_DBL = 1 << 16;\nvar TWO_PWR_24_DBL = 1 << 24;\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * Signed zero.\n * @type {!Long}\n */\nexport var ZERO = fromInt(0);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Signed one.\n * @type {!Long}\n */\nexport var ONE = fromInt(1);\n/**\n * Unsigned one.\n * @type {!Long}\n */\nexport var UONE = fromInt(1, true);\n/**\n * Signed negative one.\n * @type {!Long}\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n","import { compare as utilCompare } from \"./Util\";\nimport * as Long from \"./Long\";\nexport function create(d, h, m, s, ms) {\n    if (d === void 0) { d = 0; }\n    if (h === void 0) { h = 0; }\n    if (m === void 0) { m = 0; }\n    if (s === void 0) { s = 0; }\n    if (ms === void 0) { ms = 0; }\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            d = arguments[0], h = arguments[1], m = arguments[2], s = arguments[3], ms = arguments[4] || 0;\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return ticks.div(10000).toNumber();\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return Math.floor(ts / 86400000);\n}\nexport function hours(ts) {\n    return Math.floor(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return Math.floor(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return Math.floor(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return Math.floor(ts % 1000);\n}\nexport function ticks(ts) {\n    return Long.fromNumber(ts).mul(10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport function compare(x, y) {\n    return utilCompare(x, y);\n}\nexport function compareTo(x, y) {\n    return utilCompare(x, y);\n}\nexport function duration(x) {\n    return Math.abs(x);\n}\n","import { create as timeSpanCreate } from \"./TimeSpan\";\nimport { compare as utilCompare } from \"./Util\";\nimport * as Long from \"./Long\";\nexport function minValue() {\n    return parse(-8640000000000000, 1);\n}\nexport function maxValue() {\n    return parse(8640000000000000, 1);\n}\nexport function parse(v, kind) {\n    if (kind == null) {\n        kind = typeof v == \"string\" && v.slice(-1) == \"Z\" ? 1 /* UTC */ : 2 /* Local */;\n    }\n    var date = (v == null) ? new Date() : new Date(v);\n    if (kind === 2 /* Local */) {\n        date.kind = kind;\n    }\n    if (isNaN(date.getTime())) {\n        throw new Error(\"The string is not a valid Date.\");\n    }\n    return date;\n}\nexport function tryParse(v) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h, m, s, ms, kind) {\n    if (h === void 0) { h = 0; }\n    if (m === void 0) { m = 0; }\n    if (s === void 0) { s = 0; }\n    if (ms === void 0) { ms = 0; }\n    if (kind === void 0) { kind = 2 /* Local */; }\n    var date;\n    if (kind === 2 /* Local */) {\n        date = new Date(year, month - 1, day, h, m, s, ms);\n        date.kind = kind;\n    }\n    else {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n    }\n    if (isNaN(date.getTime())) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    return date;\n}\nexport function now() {\n    return parse();\n}\nexport function utcNow() {\n    return parse(null, 1);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;\n}\nexport function daysInMonth(year, month) {\n    return month == 2\n        ? isLeapYear(year) ? 29 : 28\n        : month >= 8 ? month % 2 == 0 ? 31 : 30 : month % 2 == 0 ? 30 : 31;\n}\nexport function toUniversalTime(d) {\n    return d.kind === 2 /* Local */ ? new Date(d.getTime()) : d;\n}\nexport function toLocalTime(d) {\n    if (d.kind === 2 /* Local */) {\n        return d;\n    }\n    else {\n        var d2 = new Date(d.getTime());\n        d2.kind = 2 /* Local */;\n        return d2;\n    }\n}\nexport function timeOfDay(d) {\n    return timeSpanCreate(0, hour(d), minute(d), second(d), millisecond(d));\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind || 1 /* UTC */);\n}\nexport function kind(d) {\n    return d.kind || 1 /* UTC */;\n}\nexport function day(d) {\n    return d.kind === 2 /* Local */ ? d.getDate() : d.getUTCDate();\n}\nexport function hour(d) {\n    return d.kind === 2 /* Local */ ? d.getHours() : d.getUTCHours();\n}\nexport function millisecond(d) {\n    return d.kind === 2 /* Local */ ? d.getMilliseconds() : d.getUTCMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 2 /* Local */ ? d.getMinutes() : d.getUTCMinutes();\n}\nexport function month(d) {\n    return (d.kind === 2 /* Local */ ? d.getMonth() : d.getUTCMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 2 /* Local */ ? d.getSeconds() : d.getUTCSeconds();\n}\nexport function year(d) {\n    return d.kind === 2 /* Local */ ? d.getFullYear() : d.getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 2 /* Local */ ? d.getDay() : d.getUTCDay();\n}\nexport function ticks(d) {\n    return Long.fromNumber(d.getTime())\n        .add(62135596800000) // UnixEpochMilliseconds\n        .sub(d.kind == 2 /* Local */ ? d.getTimezoneOffset() * 60 * 1000 : 0)\n        .mul(10000);\n}\nexport function toBinary(d) {\n    return ticks(d);\n}\nexport function dayOfYear(d) {\n    var _year = year(d);\n    var _month = month(d);\n    var _day = day(d);\n    for (var i = 1; i < _month; i++)\n        _day += daysInMonth(_year, i);\n    return _day;\n}\nexport function add(d, ts) {\n    return parse(d.getTime() + ts, d.kind || 1 /* UTC */);\n}\nexport function addDays(d, v) {\n    return parse(d.getTime() + v * 86400000, d.kind || 1 /* UTC */);\n}\nexport function addHours(d, v) {\n    return parse(d.getTime() + v * 3600000, d.kind || 1 /* UTC */);\n}\nexport function addMinutes(d, v) {\n    return parse(d.getTime() + v * 60000, d.kind || 1 /* UTC */);\n}\nexport function addSeconds(d, v) {\n    return parse(d.getTime() + v * 1000, d.kind || 1 /* UTC */);\n}\nexport function addMilliseconds(d, v) {\n    return parse(d.getTime() + v, d.kind || 1 /* UTC */);\n}\nexport function addTicks(d, t) {\n    return parse(Long.fromNumber(d.getTime()).add(t.div(10000)).toNumber(), d.kind || 1 /* UTC */);\n}\nexport function addYears(d, v) {\n    var newMonth = month(d);\n    var newYear = year(d) + v;\n    var _daysInMonth = daysInMonth(newYear, newMonth);\n    var newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind || 1 /* UTC */);\n}\nexport function addMonths(d, v) {\n    var newMonth = month(d) + v;\n    var newMonth_ = 0;\n    var yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ == 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    var newYear = year(d) + yearOffset;\n    var _daysInMonth = daysInMonth(newYear, newMonth);\n    var newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind || 1 /* UTC */);\n}\nexport function subtract(d, that) {\n    return typeof that == \"number\"\n        ? parse(d.getTime() - that, d.kind || 1 /* UTC */)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() == d2.getTime();\n}\nexport function compare(x, y) {\n    return utilCompare(x, y);\n}\nexport function compareTo(x, y) {\n    return utilCompare(x, y);\n}\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n","import { toString } from \"./Util\";\nimport { getRestParams } from \"./Util\";\nimport { escape } from \"./RegExp\";\nimport { second } from \"./Date\";\nimport { minute } from \"./Date\";\nimport { hour } from \"./Date\";\nimport { day } from \"./Date\";\nimport { month } from \"./Date\";\nimport { year } from \"./Date\";\nvar fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\\d+)?(?:\\.(\\d+))?(\\w)/;\nvar formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:(.+?))?\\}/g;\nvar StringComparison = {\n    CurrentCulture: 0,\n    CurrentCultureIgnoreCase: 1,\n    InvariantCulture: 2,\n    InvariantCultureIgnoreCase: 3,\n    Ordinal: 4,\n    OrdinalIgnoreCase: 5,\n};\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === StringComparison.CurrentCultureIgnoreCase ||\n            i === StringComparison.InvariantCultureIgnoreCase ||\n            i === StringComparison.OrdinalIgnoreCase;\n    }\n    function isOrdinal(i) {\n        return i === StringComparison.Ordinal ||\n            i === StringComparison.OrdinalIgnoreCase;\n    }\n    if (x == null)\n        return y == null ? 0 : -1;\n    if (y == null)\n        return 1; // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, false);\n}\nexport function indexOfAny(str, anyOf) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (str == null || str === \"\")\n        return -1;\n    var startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0)\n        throw new Error(\"String.indexOfAny: Start index cannot be negative\");\n    var length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0)\n        throw new Error(\"String.indexOfAny: Length cannot be negative\");\n    if (length > str.length - startIndex)\n        throw new Error(\"String.indexOfAny: Invalid startIndex and length\");\n    str = str.substr(startIndex, length);\n    for (var _a = 0, anyOf_1 = anyOf; _a < anyOf_1.length; _a++) {\n        var c = anyOf_1[_a];\n        var index = str.indexOf(c);\n        if (index > -1)\n            return index + startIndex;\n    }\n    return -1;\n}\nfunction toHex(value) {\n    return value < 0\n        ? \"ff\" + (16777215 - (Math.abs(value) - 1)).toString(16)\n        : value.toString(16);\n}\nexport function fsFormat(str) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var _cont;\n    function isObject(x) {\n        return x !== null && typeof x === \"object\" && !(x instanceof Number) && !(x instanceof String) && !(x instanceof Boolean);\n    }\n    function formatOnce(str, rep) {\n        return str.replace(fsFormatRegExp, function (_, prefix, flags, pad, precision, format) {\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    rep = rep.toFixed(precision || 6);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = rep.toPrecision(precision);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = rep.toExponential(precision);\n                    break;\n                case \"O\":\n                    rep = toString(rep);\n                    break;\n                case \"A\":\n                    try {\n                        rep = JSON.stringify(rep, function (k, v) {\n                            return v && v[Symbol.iterator] && !Array.isArray(v) && isObject(v) ? Array.from(v)\n                                : v && typeof v.ToString === \"function\" ? toString(v) : v;\n                        });\n                    }\n                    catch (err) {\n                        // Fallback for objects with circular references\n                        rep = \"{\" + Object.getOwnPropertyNames(rep).map(function (k) { return k + \": \" + String(rep[k]); }).join(\", \") + \"}\";\n                    }\n                    break;\n                case \"x\":\n                    rep = toHex(Number(rep));\n                    break;\n                case \"X\":\n                    rep = toHex(Number(rep)).toUpperCase();\n                    break;\n            }\n            var plusPrefix = flags.indexOf(\"+\") >= 0 && parseInt(rep) >= 0;\n            if (!isNaN(pad = parseInt(pad))) {\n                var ch = pad >= 0 && flags.indexOf(\"0\") >= 0 ? \"0\" : \" \";\n                rep = padLeft(rep, Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);\n            }\n            var once = prefix + (plusPrefix ? \"+\" + rep : rep);\n            return once.replace(/%/g, \"%%\");\n        });\n    }\n    function makeFn(str) {\n        return function (rep) {\n            var str2 = formatOnce(str, rep);\n            return fsFormatRegExp.test(str2)\n                ? makeFn(str2) : _cont(str2.replace(/%%/g, \"%\"));\n        };\n    }\n    if (args.length === 0) {\n        return function (cont) {\n            _cont = cont;\n            return fsFormatRegExp.test(str) ? makeFn(str) : _cont(str);\n        };\n    }\n    else {\n        for (var i = 0; i < args.length; i++) {\n            str = formatOnce(str, args[i]);\n        }\n        return str.replace(/%%/g, \"%\");\n    }\n}\nexport function format(str) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return str.replace(formatRegExp, function (match, idx, pad, format) {\n        var rep = args[idx], padSymbol = \" \";\n        if (typeof rep === \"number\") {\n            switch ((format || \"\").substring(0, 1)) {\n                case \"f\":\n                case \"F\":\n                    rep = format.length > 1 ? rep.toFixed(format.substring(1)) : rep.toFixed(2);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = format.length > 1 ? rep.toPrecision(format.substring(1)) : rep.toPrecision();\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = format.length > 1 ? rep.toExponential(format.substring(1)) : rep.toExponential();\n                    break;\n                case \"p\":\n                case \"P\":\n                    rep = (format.length > 1 ? (rep * 100).toFixed(format.substring(1)) : (rep * 100).toFixed(2)) + \" %\";\n                    break;\n                case \"x\":\n                    rep = toHex(Number(rep));\n                    break;\n                case \"X\":\n                    rep = toHex(Number(rep)).toUpperCase();\n                    break;\n                default:\n                    var m = /^(0+)(\\.0+)?$/.exec(format);\n                    if (m != null) {\n                        var decs = 0;\n                        if (m[2] != null)\n                            rep = rep.toFixed(decs = m[2].length - 1);\n                        pad = \",\" + (m[1].length + (decs ? decs + 1 : 0)).toString();\n                        padSymbol = \"0\";\n                    }\n                    else if (format) {\n                        rep = format;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            if (format.length === 1) {\n                switch (format) {\n                    case \"D\":\n                        rep = rep.toDateString();\n                        break;\n                    case \"T\":\n                        rep = rep.toLocaleTimeString();\n                        break;\n                    case \"d\":\n                        rep = rep.toLocaleDateString();\n                        break;\n                    case \"t\":\n                        rep = rep.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n                        break;\n                    case \"o\":\n                    case \"O\":\n                        if (rep.kind === 2 /* Local */) {\n                            var offset = rep.getTimezoneOffset() * -1;\n                            rep = format(\"{0:yyyy-MM-dd}T{0:HH:mm}:{1:00.000}{2}{3:00}:{4:00}\", rep, second(rep), offset >= 0 ? \"+\" : \"-\", ~~(offset / 60), offset % 60);\n                        }\n                        else {\n                            rep = rep.toISOString();\n                        }\n                }\n            }\n            else {\n                rep = format.replace(/\\w+/g, function (match2) {\n                    var rep2 = match2;\n                    switch (match2.substring(0, 1)) {\n                        case \"y\":\n                            rep2 = match2.length < 4 ? year(rep) % 100 : year(rep);\n                            break;\n                        case \"h\":\n                            rep2 = rep.getHours() > 12 ? hour(rep) % 12 : hour(rep);\n                            break;\n                        case \"M\":\n                            rep2 = month(rep);\n                            break;\n                        case \"d\":\n                            rep2 = day(rep);\n                            break;\n                        case \"H\":\n                            rep2 = hour(rep);\n                            break;\n                        case \"m\":\n                            rep2 = minute(rep);\n                            break;\n                        case \"s\":\n                            rep2 = second(rep);\n                            break;\n                    }\n                    if (rep2 !== match2 && rep2 < 10 && match2.length > 1) {\n                        rep2 = \"0\" + rep2;\n                    }\n                    return rep2;\n                });\n            }\n        }\n        if (!isNaN(pad = parseInt((pad || \"\").substring(1)))) {\n            rep = padLeft(rep, Math.abs(pad), padSymbol, pad < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    var idx = str.lastIndexOf(search);\n    return idx >= 0 && idx == str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0)\n        throw new Error(\"String length must be non-negative\");\n    var xs = new Array(n);\n    for (var i = 0; i < n; i++)\n        xs[i] = f(i);\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length == 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function join(delimiter, xs) {\n    xs = typeof xs == \"string\" ? getRestParams(arguments, 1) : xs;\n    return (Array.isArray(xs) ? xs : Array.from(xs)).join(delimiter);\n}\nexport function newGuid() {\n    var uuid = \"\";\n    for (var i = 0; i < 32; i++) {\n        var random = Math.random() * 16 | 0;\n        if (i === 8 || i === 12 || i === 16 || i === 20)\n            uuid += \"-\";\n        uuid += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);\n    }\n    return uuid;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    str = String(str);\n    len = len - str.length;\n    for (var i = -1; ++i < len;)\n        str = isRight ? str + ch : ch + str;\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, function () { return x; });\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count == \"number\" ? count : null;\n    removeEmpty = typeof removeEmpty == \"number\" ? removeEmpty : null;\n    if (count < 0)\n        throw new Error(\"Count cannot be less than zero\");\n    if (count === 0)\n        return [];\n    splitters = Array.isArray(splitters) ? splitters : getRestParams(arguments, 1);\n    splitters = splitters.map(function (x) { return escape(x); });\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    var m;\n    var i = 0;\n    var splits = [];\n    var reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while ((count == null || count > 1) && (m = reg.exec(str)) !== null) {\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0)\n        splits.push(str.substring(i));\n    return splits;\n}\nexport function trim(str, side) {\n    var chars = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        chars[_i - 2] = arguments[_i];\n    }\n    if (side == \"both\" && chars.length == 0)\n        return str.trim();\n    if (side == \"start\" || side == \"both\") {\n        var reg = chars.length == 0 ? /^\\s+/ : new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\");\n        str = str.replace(reg, \"\");\n    }\n    if (side == \"end\" || side == \"both\") {\n        var reg = chars.length == 0 ? /\\s+$/ : new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\");\n        str = str.replace(reg, \"\");\n    }\n    return str;\n}\n","﻿module App.Tokeniser\r\n\r\nopen App.Common\r\n\r\n// \r\n//\r\n// Tokeniser\r\n//\r\n//\r\n// Utility Functions to convert between string and char list types\r\nlet explode (str : string) = str |> List.ofSeq\r\nlet implode (x : char list) = \r\n    let mutable s = \"\"\r\n    List.iter (fun c -> s <- s + c.ToString()) x\r\n    s\r\n\r\n/// Utility match function characters in str match a starting prefix of x\r\nlet rec charListStartsWith (x : char list) (str : string) = \r\n    let rec clsw1 x y =\r\n        match x,y with\r\n        | _, [] -> true // empty string will match anything\r\n        | xc :: x1, yc :: y1 when xc = yc -> clsw1 x1 y1 // if first char matches check the rest\r\n        | _ -> false // This must be a mismatch\r\n    clsw1 x (explode str)\r\n\r\n\r\n\r\nlet tokMatch (start : char -> bool) (notEnd : char -> bool) (tokType : string -> Token) lst = \r\n    let rec tContent tChars = \r\n        function \r\n        | c :: r when notEnd c -> tContent (c :: tChars) r\r\n        | r -> tokType (List.rev tChars |> implode), r\r\n    match lst with\r\n    | c :: _ as cl when start c -> tContent [] cl |> Some\r\n    | _ -> None\r\n\r\nlet (|IntMatch|_|) = \r\n    tokMatch isDigit isDigit (int >> TokIntLit)\r\n\r\nlet (|NameMatch|_|) = \r\n    tokMatch isAlpha isAlphaNum TokName\r\n\r\nlet (|StringMatch|_|) cLst = \r\n    let doEsc = \r\n        function \r\n        | 'n' -> '\\n'\r\n        | 't' -> '\\t'\r\n        | 'r' -> '\\r'\r\n        | c -> c\r\n    \r\n    let rec sContent sChars = \r\n        function \r\n        | '\\\\' :: c2 :: r -> sContent (doEsc c2 :: sChars) r\r\n        | '\"' :: r -> \r\n            List.rev sChars\r\n            |> implode\r\n            |> TokStrLit, r\r\n        | c :: r -> sContent (c :: sChars) r\r\n        | [] -> failwithf \"Unterminated string\\n\"\r\n    \r\n    match cLst with\r\n    | '\"' :: x -> sContent [] x |> Some\r\n    | _ -> None\r\n\r\nlet (|OpMatch|_|) cLst = \r\n    let x = List.tryFind (charListStartsWith cLst) allOps\r\n    let x1 = x |>  Option.map (fun op -> TokName op, List.skip op.Length cLst)\r\n    x1\r\n\r\nlet tokeniseToSeqFromSeq lineSeq = \r\n    let rec tokenise1 line = \r\n        match line with\r\n        | '/' :: '/' :: _ -> tokenise1 (List.skipWhile (isNewLine >> not) line)\r\n        | IntMatch(t, r) | OpMatch(t,r) | StringMatch(t, r) | NameMatch(t, r)  -> \r\n            seq { \r\n                yield t\r\n                yield! tokenise1 r\r\n            }\r\n        | ch :: r when isWhiteSpace ch -> tokenise1 r\r\n        | ch :: _ as toks -> failwithf \"Error: unrecognised character '%A' found in tokenize input%A\" ch toks\r\n        | [] -> seq []\r\n    lineSeq |> Seq.collect (explode >> tokenise1)\r\n\r\nlet tokeniseList src = \r\n    let rec tokenise1 lst = \r\n        match lst with\r\n        | '/' :: '/' :: _ -> tokenise1 (List.skipWhile (isNewLine >> not) lst)\r\n        | IntMatch(t, r) | OpMatch(t, r) | StringMatch(t, r) | NameMatch(t, r) -> t :: tokenise1 r\r\n        | ch :: r when isWhiteSpace ch -> tokenise1 r\r\n        | ch :: _ as toks -> failwithf \"Error: unrecognised character '%A' found in tokenize input%A\" ch toks\r\n        | [] -> []\r\n    src\r\n    |> explode\r\n    |> tokenise1\r\n","﻿module App.Parser\r\n\r\nopen App.Common\r\n\r\n//\r\n//\r\n// TINY Parser\r\n//\r\n//\r\n//--------------------------Predicates on Tokens--------------------------------------\r\n//            \r\n/// token is TokName s where s is in list lst\r\nlet isTokInList (lst : string list) = \r\n    function \r\n    | TokName op -> List.contains op lst\r\n    | _ -> false\r\n\r\n/// token is a literal value\r\nlet isLitTok t = \r\n    match t with\r\n    | TokIntLit _ | TokStrLit _ -> true\r\n    | _ -> false\r\n\r\n/// token is a binay operator\r\nlet isBinaryTok = isTokInList binaryOps\r\n\r\n/// token is a unary operator   \r\nlet isUnaryTok = isTokInList unaryOps\r\n\r\n/// token is a recursive parse construct end marker\r\nlet isEndTok = isTokInList endOps\r\n\r\nlet isStartTok = isTokInList startOps\r\n\r\n/// convert predicate into a partial pattern function which returns its input unchanged\r\nlet makePP tPred tok = if tPred tok then Some tok else None\r\n\r\nlet (|IsLiteral|_|) = makePP isLitTok \r\nlet (|IsBinary|_|) = makePP isBinaryTok\r\nlet (|IsUnary|_|) = makePP isUnaryTok\r\nlet (|IsEnd|_|) = makePP isEndTok\r\nlet (|IsStart|_|) = makePP isStartTok\r\nlet (|IsSymbol|_|) = function \r\n    | IsLiteral _ | IsBinary _ | IsUnary _ | IsStart _ | IsEnd _ | TokNull -> None\r\n    | tok -> Some tok\r\n\r\n/// for a token representing a value, convert it into the equivalent Exp\r\nlet toExp tok = \r\n    match tok with\r\n    | IsSymbol (TokName s) | IsUnary (TokName s) | IsBinary (TokName s)-> Name s\r\n    | IsLiteral _ -> Literal tok\r\n    | TokNull -> NullExp\r\n    | _ -> failwithf \"No valid translation for token %A as an Exp\" tok\r\n\r\n/// binding precedence for functional application\r\nlet applyBinding = 100\r\n\r\n/// binding precedence for unary operators\r\nlet unaryBinding op = \r\n    if isUnaryTok op then 100\r\n    else 110\r\n\r\n/// left binding of a token determining operator precedence\r\nlet LBinding tok = \r\n    match tok with\r\n    | IsBinary (TokName op) -> binaryOpPriority.[op]\r\n    | IsEnd _ -> -10\r\n    | IsSymbol _ | IsLiteral _ -> applyBinding\r\n    | _ -> 1000\r\n\r\n/// right binding of a token determining operator precedence\r\nlet RBinding tok = \r\n    match tok with\r\n    | IsEnd _ -> 1000\r\n    | _ -> LBinding tok\r\n\r\n//\r\n//-----------------------------------Parser----------------------------------------/\r\n//\r\n\r\n/// Parse toks as an expression until binding drops below rbPrio\r\n/// Return parse result * unparsed tokens\r\n/// Uses Pratt parsing algorithm\r\nlet rec ParseExpression rbPrio toks = \r\n    let rec expLoop left toks = \r\n        if toks <> [] && rbPrio < LBinding(List.head toks) then \r\n            let (left1, r) = LeftD left toks\r\n            expLoop left1 r\r\n        else left, toks\r\n    match toks with\r\n    | PNullD(left, r) -> \r\n        Some(if List.isEmpty r then left, []\r\n             else expLoop left r)\r\n    | _ -> None\r\n\r\n/// Interpret next token as an operator in left denotation context.\r\n/// Parse the RH operand, if operator is binary.\r\n/// Return the parse result * unparsed tokens\r\nand LeftD left toks = \r\n    match toks with\r\n    | IsBinary t :: r -> \r\n        match r with\r\n        | PEXP (RBinding t) (right, r1) -> \r\n            Apply [ toExp t\r\n                    left\r\n                    right ], r1\r\n        | _ -> failwithf \"RH operand for op %A not found at %A in LeftD context\" t (List.take 5 toks)\r\n    | PNullD(e2, r2) -> Apply [ left; e2 ], r2\r\n    | t :: _ -> failwithf \"Unexpected token %A found in LeftD context\" t\r\n    | [] -> failwithf \"Missing tokens: LeftD context expected\"\r\n\r\n/// Parse a single token from toks as an expression.\r\n/// If the token starts a recursive construct parse the whole construct\r\n/// Return parse result * unparsed tokens\r\nand NullD toks = \r\n    match toks with\r\n    | IsStart _ :: _ -> \r\n        match toks with\r\n        | PREC(e1, r) -> Some(e1, r)\r\n        | _ -> \r\n            printfn \"Recursive parse failed after start token: %A\" toks\r\n            None\r\n    | IsLiteral t :: r -> Some(Literal t, r)\r\n    | IsSymbol (TokName s) :: r -> Some(Name s, r)\r\n    | IsUnary tok :: r -> ParseExpression (unaryBinding tok) r\r\n    | _ -> \r\n        printfn \"Nullary context value expected but not found at: %A\" toks\r\n        None\r\n\r\n/// Partial Active Pattern equivalent to NullD\r\nand (|PNullD|_|) toks = NullD toks\r\n\r\n/// Partial Active Pattern equivalent to ParseExpression\r\nand (|PEXP|_|) = ParseExpression\r\n\r\n/// Partial Active Pattern to parse a recursive construct bracketed by keywords or brackets\r\n/// This handles all recursive parsing, with input token list toks and return exp,restOfToks\r\n/// Sub-patterns here parse parts of a construct with input toks and output exp,restOfToks\r\n/// Chained sub-patterns can match different subexpressions in e.g. IF THEN ELSE FI construct.\r\nand (|PREC|_|) (tokens : Token list) = \r\n    /// Match a keyword and remove it from input.\r\n    let (|KW|_|) kw toks = \r\n        match toks with\r\n        | TokName s :: r when s = kw -> Some r\r\n        | _ -> None\r\n        \r\n    /// match a sequence of symbol tokens from a let definition\r\n    let rec (|NAMES|_|) nms toks = \r\n        match toks with\r\n        | IsSymbol (TokName nm) :: r -> (|NAMES|_|) (Name nm :: nms) r\r\n        | TokName \"=\" :: _ when List.length nms >= 1 -> (FNames(List.rev nms), toks) |> Some\r\n        | _ -> failwithf \"<fName> ... = (after LET) expected but not found in: %A\" toks\r\n    \r\n    match tokens with\r\n    | KW \"LET\" (NAMES [] (FNames(f::args), KW \"=\" (PREC(eBody, KW \"IN\" (PREC( eIn, r)))))) -> \r\n        (Lambda(Func = f, Args = args, Body = eBody, InExp = eIn), r) |> Some\r\n    | KW \"(\" (PREC( exp, KW \")\" r)) -> (exp, r) |> Some\r\n    | KW \"IF\" (PREC(cond, KW \"THEN\" (PREC( thenP, KW \"ELSE\" (PREC(elseP, KW \"FI\" r)))))) -> \r\n        Some(Apply [ Name \"ITE\"\r\n                     cond\r\n                     thenP\r\n                     elseP ], r)\r\n    | [] -> None\r\n    | _ -> ParseExpression 0 tokens\r\n","﻿module App.Reducer\r\n\r\nopen App.Common\r\n\r\n//\r\n// Types representing a program as a mutable graph structure\r\n//\r\n// A graph node\r\ntype Data = \r\n    | DName of string * Loc\r\n    | DInt of int\r\n    | DStr of string\r\n    | DImpl of CName : string * ReductionRule : RRule * Arity : int\r\n    | DNull\r\n    | DCell of Hd : Loc * Tl : Loc\r\n\r\n// a mutable cell used so that graphs can be mutated during beta reduction\r\nand Loc = Data ref\r\n\r\nand RRule = // type of reduction rule that implements combinators and other operations\r\n    | Binary of (Data -> Data -> Data) // strict binary operation on two operands\r\n    | Custom of (Loc list -> int -> Unit) // custom operation which mutates stack\r\n                  \r\n//\r\n// Graph functions\r\n//\r\n\r\n/// pretty-print function for possibly cyclic graphs\r\nlet ppL x = \r\n    let rec ppL1 trail (x : Loc) = \r\n        match !x with\r\n        | DName(s, x) -> sprintf \"<%s:%A>\" s (!x)\r\n        | DInt n -> string n\r\n        | DStr s -> \"\\\"\" + s + \"\\\"\"\r\n        | DImpl(s, _, _) -> s\r\n        | DNull -> \"Null\"\r\n        | DCell _ when List.exists (fun y -> System.Object.ReferenceEquals(x, y)) trail -> sprintf \"...loop...\"\r\n        | DCell(h, t) -> sprintf \"(%s,%s)\" (ppL1 (x :: trail) h) (ppL1 (x :: trail) t)\r\n        | DImpl(s, _, _) -> sprintf \"%s*\" s\r\n    ppL1 [] x\r\n\r\nlet ppS stack = (stack |> List.map ppL)\r\n\r\n// Tail of a graph binary  cell\r\nlet DTail x = \r\n    match !x with\r\n    | DCell(_, t) -> t\r\n    | _ -> failwithf \"In Tail x: x= %A\" (ppL x)\r\n\r\n// head of a graph binary cell\r\nlet DHead x = \r\n    match !x with\r\n    | DCell(h, _) -> h\r\n    | _ -> failwithf \"In Head x: x=%A\" (ppL x)\r\n\r\n/// a binary cell in the graph representing a (possibly Curried) function application.\r\nlet DApply x y = DCell(x, y) |> ref\r\n\r\n/// Equality on graphs - all combinators and trees are treated as non-equal\r\n/// Immediate (not-tree) data is correctly compared\r\n/// DNull is not equal to any pair (which is a P function application), but equal to DNull\r\n/// function applications are always not equal\r\nlet DEquals a b = \r\n    match a, b with\r\n    | DName(s1, _), DName(s2, _) when s1 = s2 -> true\r\n    | DInt n1, DInt n2 -> n1 = n2\r\n    | DStr s1, DStr s2 -> s1 = s2\r\n    | DNull, DNull -> true\r\n    | _ -> false\r\n\r\nlet (|REFCELL|_|) = function | DCell(h,t) -> Some(!h,!t) | _ -> None\r\n\r\nlet DIsPair x = \r\n    match !x with\r\n    | REFCELL(REFCELL(DImpl(\"P\",_,_),_),_) -> true\r\n    | _ -> false\r\n\r\nlet getInt x = \r\n    match x with\r\n    | DInt n -> n\r\n    | _ -> failwithf \"%A found when integer expected\" x\r\n\r\nlet getArg (stack : Loc list) n = DTail(List.item n stack)\r\nlet getStack (stack : Loc list) n = List.item n stack\r\nlet changeStack (stack : Loc list) n newValue = List.item n stack := newValue\r\n\r\nlet isApp l = \r\n    match !l with\r\n    | DCell(_) -> true\r\n    | _ -> false\r\n\r\n//\r\n// ----------------------Functions to Load expression as Graph-----------------------------------\r\n/// Bracket abstraction\r\n/// [v] exp: abstract name v from expression exp, using combinators\r\n/// ([v] exp) v = exp\r\nlet rec bracketAbstract v exp = \r\n    match exp with\r\n    | Apply([ x ]) -> bracketAbstract v x\r\n    | Apply(lst) when List.length lst >= 2 -> \r\n        let n = List.length lst\r\n        Apply [ Name \"S\"\r\n                bracketAbstract v (Apply lst.[0..n - 2])\r\n                bracketAbstract v (lst.[n - 1]) ]\r\n    | x when x = v -> Name \"I\"\r\n    | y -> \r\n        Apply [ Name \"K\"\r\n                y ]\r\n\r\n/// Abstract each element of vl from exp in list order\r\nlet listBracketAbstract vl exp = List.fold (fun e v -> bracketAbstract v e) exp vl\r\n\r\n/// Convert an expression into a graph suitable for reduction\r\n/// Note how Apply lst gets transformed into a list of binary DApply cells\r\n/// Names are looked up in envt and turned into ref cells of implementations\r\n/// In the case of recursive functions these cells are over-written by the \r\n/// correct implementation after the graph as been created.\r\n/// Normal call: makeHeap BuiltinFuncs\r\nlet rec makeHeap (envt : (string * Loc) list) (exp : Exp) : Data Ref = \r\n    let lookUpValue evt s = snd (List.find (fun (nm, _) -> s = nm) evt)\r\n    \r\n    let rec makeH e = \r\n        function \r\n        | Literal(TokIntLit n) -> DInt n |> ref\r\n        | Literal(TokStrLit n) -> DStr n |> ref\r\n        | Name s -> (lookUpValue e s)\r\n        | Literal _ as x -> failwithf \"Unrecognised literal %A\" x\r\n        | NullExp -> DNull |> ref\r\n        | Apply [] -> DNull |> ref\r\n        | Apply [ x ] -> makeH e x\r\n        | Apply(lst) -> DApply (Apply lst.[0..lst.Length - 2] |> makeH e) (List.last lst |> makeH e)\r\n        | Lambda(Name f, args, fBody, expIn) -> \r\n            let fRef = ref DNull // Loc for function definition - initially null\r\n            let envtWithF = (f, fRef) :: e // add Loc to envt\r\n            let fDef = listBracketAbstract (List.rev args) fBody // get function defn using combinators\r\n            let af = makeHeap envtWithF fDef // load function defn to heap replacing names by envt Locs\r\n            fRef := (!af) // update the Loc corresponding to the function just loaded\r\n            makeH envtWithF expIn // load the IN expression to heap using the envt with f added\r\n        | _ -> failwithf \"Exp case %A not implemented in makeHeap\" exp\r\n    makeH envt exp\r\n\r\n//\r\n// Combinator Graph Reduction\r\n//\r\n/// Perform normal order combinator beta reduction on root until top-level tree is irreducible\r\n/// n: level of recursive calls to reduce (controls print indentation)\r\n/// root:\r\nlet rec reduce n root = \r\n    let rec indent = \r\n        function \r\n        | 0 -> \"\"\r\n        | n -> \" \" + indent (n - 1)\r\n    \r\n    let rec getSpine sp root = \r\n        match !root with\r\n        | DCell(h, _) -> getSpine (h :: sp) h\r\n        | _ -> sp\r\n    \r\n    printfn \"%sReducing: %s\" (indent n) (ppL root)\r\n    let rec reduceLoop() = \r\n        let stack = getSpine [ root ] root\r\n        if not (isApp root) then root\r\n        else \r\n            let top = List.head stack\r\n            match !top with\r\n            | DCell _ -> failwithf \"Should never happen!\"\r\n            | DImpl(_, _, n) when n > stack.Length -> root\r\n            | DImpl(\"P\", _, _) -> // To evaluate a P we must evaluate its Head which is the 1st element\r\n                // in any list made of pairs\r\n                reduce (n + 1) (getArg stack 1) |> ignore // recursively reduce the pair Head\r\n                root // return with tail in its unreduced form\r\n            | DImpl(_, Custom func, _) -> \r\n                func stack n\r\n                reduceLoop()\r\n            | DImpl(_, Binary func, _) -> \r\n                let a = reduce (n + 1) (getArg stack 1)\r\n                let b = reduce (n + 1) (getArg stack 2)\r\n                let ret = func !a !b\r\n                (getStack stack 2) := ret\r\n                reduceLoop()\r\n            | DName(s, body) -> \r\n                printfn \"%sEntering function %s...\" (indent n) s\r\n                top := !body\r\n                reduceLoop()\r\n            | _ -> top\r\n    \r\n    let retVal = reduceLoop()\r\n    printfn \"%svalue is: %s\" (indent n) (ppL retVal)\r\n    retVal\r\n\r\n//\r\n// Reduction Rules for individual built-in functions\r\n//\r\n/// I combinator\r\nlet IReduce(stack : Loc list) n = \r\n    let x = getArg stack 1\r\n    changeStack stack 1 !x\r\n\r\n/// K combinator\r\nlet KReduce(stack : Loc list) n = \r\n    let y = getArg stack 1\r\n    changeStack stack 2 !y\r\n\r\n/// S combinator\r\nlet SReduce(stack : Loc list) n = \r\n    let ga = getArg stack\r\n    let f, g, x = ga 1, ga 2, ga 3\r\n    changeStack stack 3 !(DApply (DApply f x) (DApply g x))\r\n\r\n/// F combinator used for \"false\" in ITE\r\nlet FReduce(stack : Loc list) n = \r\n    let y = getArg stack 2\r\n    changeStack stack 2 !y\r\n\r\n/// ISPAIR returns true only for its single parameter a pair\r\nlet ISPAIRReduce dBool (stack : Loc list) n = \r\n    let b = match !(getArg stack 1) with \r\n            | DImpl(\"ISPAIR\",_,_) ->\r\n              reduce (n + 1) (getArg stack 1) |> DIsPair // recursively reduce the parameter and test it\r\n            | _ -> false\r\n    changeStack stack 1 (dBool b)\r\n\r\n\r\n\r\n/// combinators and other functions that are built in\r\nlet BuiltInFuncs = \r\n    /// generate a custom function from the table\r\n    let comb cName cFun arity = cName, ref (DImpl(cName, ReductionRule = Custom cFun, Arity = arity))\r\n    \r\n    /// generate a strict binary function from the table\r\n    let binop bName bFun = bName, ref (DImpl(bName, ReductionRule = Binary bFun, Arity = 2))\r\n    \r\n    // map boolean into equivalent combinator\r\n    let dBool b = \r\n        match b with\r\n        | true -> !(snd (comb \"K\" KReduce 2))\r\n        | false -> !(snd (comb \"F\" FReduce 2))\r\n    \r\n    [ comb \"P\" (fun _ _ -> ()) 2 // \"P\" is special case implemented in reduce loop\r\n      comb \"P\" (fun _ _ -> ()) 2 |> (fun (_, impl) -> \"::\", impl) // make \"::\" the same as \"P\"\r\n      comb \"I\" IReduce 1\r\n      comb \"K\" KReduce 2\r\n      comb \"F\" FReduce 2\r\n      comb \"S\" SReduce 3\r\n      comb \"ISPAIR\" (ISPAIRReduce dBool) 1\r\n      comb \"ITE\" IReduce 1 // ITE is the same as I\r\n      binop \"+\" (fun a b -> DInt(getInt a + getInt b))\r\n      binop \"-\" (fun a b -> DInt(getInt a - getInt b))\r\n      binop \"/\" (fun a b -> DInt(getInt a / getInt b))\r\n      binop \"%\" (fun a b -> DInt(getInt a % getInt b))\r\n      binop \"*\" (fun a b -> DInt(getInt a * getInt b))\r\n      binop \"<\" (fun a b -> dBool (getInt a < getInt b))\r\n      binop \">\" (fun a b -> dBool (getInt a > getInt b))\r\n      binop \"=\" (fun a b -> dBool (DEquals a b)) ]\r\n","﻿namespace App\r\nmodule Main =\r\n    let src = \"IF x THEN a b ( y+z ) ELSE (123) FI\"\r\n    let src1 = \"2+3\"\r\n    let src3 = \"LET fib n = IF n < 2 THEN 1 ELSE fib(n-1) + fib(n-2) FI IN fib 8\"\r\n    let src2 = \"LET f x = x + 11 IN LET g x = x+1 IN f 20 + f 30 + g 7\" \r\n    let src4 = \"LET f n = IF n > 0 THEN 101 ELSE 2 + f (n-1) FI IN f 2\"   \r\n    let src5 = \"LET fpp n = P 1 (fpp (n+1)) IN fpp 1\"\r\n    let tokens = \r\n        Tokeniser.tokeniseList\r\n        >> List.ofSeq\r\n\r\n    let parse = Parser.ParseExpression 0\r\n\r\n    let make = Reducer.makeHeap Reducer.BuiltInFuncs\r\n\r\n    let pp = Reducer.ppL\r\n\r\n\r\n    let testProgram src = \r\n        printfn \"Input = %A\\n\\n\" src\r\n        printfn \"Tokens = %A\\n\\n\" (tokens src)\r\n        let pTree = (src |> tokens |> parse)\r\n        printfn \"Parse Tree = %A\\n\\n\" pTree\r\n        let heap = \r\n            match pTree with\r\n            | Some (exp,_)-> make exp\r\n            | _ -> failwithf \"Unexpected parse tree, expected 'Some(exp,_)'\\nfound: %A\" pTree\r\n        printfn \"Memory Graph = %s\\n\\n\" (pp heap)\r\n#if FABLE_COMPILER\r\n#else\r\n        printfn \"Memory Graph as F# structure =%A\" heap\r\n#endif\r\n        Reducer.reduce 0 heap\r\n\r\n    let enterProgram() =\r\n        testProgram src1\r\n\r\n#if FABLE_COMPILER\r\n#else\r\n    open Expecto\r\n\r\n    [<EntryPoint>]\r\n    let main argv =\r\n        Tests.runTestsInAssembly defaultConfig argv\r\n#endif\r\n\r\n#if FABLE_COMPILER\r\n    enterProgram() |> ignore\r\n#endif"],"names":["ofArray","FSymbol","listOfArray","seqCompareWith","seqMap","map","tryFind","append","seqFold","reverse","seqChoose","seqScan","add","create","tree_height","tree_mk","tree_rebalance","tree_add","tree_mem","tree_forall","tree_exists","tree_collapseLHS","tree_mkIterator","tree_moveNext","tree_mkFromEnumerator","tree_ofSeq","from","item","reduce"],"mappings":"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"}